

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jul 25 09:49:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     008F                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     0105                     	;# 
   129     0107                     	;# 
   130     0108                     	;# 
   131     0109                     	;# 
   132     010C                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     0185                     	;# 
   138     0187                     	;# 
   139     0188                     	;# 
   140     0189                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008F                     	;# 
   188     0090                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009E                     	;# 
   205     009F                     	;# 
   206     0105                     	;# 
   207     0107                     	;# 
   208     0108                     	;# 
   209     0109                     	;# 
   210     010C                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     0185                     	;# 
   216     0187                     	;# 
   217     0188                     	;# 
   218     0189                     	;# 
   219     018C                     	;# 
   220     018D                     	;# 
   221     0000                     	;# 
   222     0001                     	;# 
   223     0002                     	;# 
   224     0003                     	;# 
   225     0004                     	;# 
   226     0005                     	;# 
   227     0006                     	;# 
   228     0007                     	;# 
   229     0008                     	;# 
   230     0009                     	;# 
   231     000A                     	;# 
   232     000B                     	;# 
   233     000C                     	;# 
   234     000D                     	;# 
   235     000E                     	;# 
   236     000E                     	;# 
   237     000F                     	;# 
   238     0010                     	;# 
   239     0011                     	;# 
   240     0012                     	;# 
   241     0013                     	;# 
   242     0014                     	;# 
   243     0015                     	;# 
   244     0015                     	;# 
   245     0016                     	;# 
   246     0017                     	;# 
   247     0018                     	;# 
   248     0019                     	;# 
   249     001A                     	;# 
   250     001B                     	;# 
   251     001B                     	;# 
   252     001C                     	;# 
   253     001D                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     0081                     	;# 
   257     0085                     	;# 
   258     0086                     	;# 
   259     0087                     	;# 
   260     0088                     	;# 
   261     0089                     	;# 
   262     008C                     	;# 
   263     008D                     	;# 
   264     008E                     	;# 
   265     008F                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     0105                     	;# 
   285     0107                     	;# 
   286     0108                     	;# 
   287     0109                     	;# 
   288     010C                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     0185                     	;# 
   294     0187                     	;# 
   295     0188                     	;# 
   296     0189                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0000                     	;# 
   300     0001                     	;# 
   301     0002                     	;# 
   302     0003                     	;# 
   303     0004                     	;# 
   304     0005                     	;# 
   305     0006                     	;# 
   306     0007                     	;# 
   307     0008                     	;# 
   308     0009                     	;# 
   309     000A                     	;# 
   310     000B                     	;# 
   311     000C                     	;# 
   312     000D                     	;# 
   313     000E                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0014                     	;# 
   321     0015                     	;# 
   322     0015                     	;# 
   323     0016                     	;# 
   324     0017                     	;# 
   325     0018                     	;# 
   326     0019                     	;# 
   327     001A                     	;# 
   328     001B                     	;# 
   329     001B                     	;# 
   330     001C                     	;# 
   331     001D                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     0081                     	;# 
   335     0085                     	;# 
   336     0086                     	;# 
   337     0087                     	;# 
   338     0088                     	;# 
   339     0089                     	;# 
   340     008C                     	;# 
   341     008D                     	;# 
   342     008E                     	;# 
   343     008F                     	;# 
   344     0090                     	;# 
   345     0091                     	;# 
   346     0092                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0095                     	;# 
   352     0096                     	;# 
   353     0097                     	;# 
   354     0098                     	;# 
   355     0099                     	;# 
   356     009A                     	;# 
   357     009B                     	;# 
   358     009C                     	;# 
   359     009D                     	;# 
   360     009E                     	;# 
   361     009F                     	;# 
   362     0105                     	;# 
   363     0107                     	;# 
   364     0108                     	;# 
   365     0109                     	;# 
   366     010C                     	;# 
   367     010C                     	;# 
   368     010D                     	;# 
   369     010E                     	;# 
   370     010F                     	;# 
   371     0185                     	;# 
   372     0187                     	;# 
   373     0188                     	;# 
   374     0189                     	;# 
   375     018C                     	;# 
   376     018D                     	;# 
   377     001E                     _ADRESH	set	30
   378     0008                     _PORTDbits	set	8
   379     0006                     _PORTBbits	set	6
   380     000B                     _INTCONbits	set	11
   381     0009                     _PORTE	set	9
   382     0008                     _PORTD	set	8
   383     0007                     _PORTC	set	7
   384     0006                     _PORTB	set	6
   385     0005                     _PORTA	set	5
   386     000C                     _PIR1bits	set	12
   387     001F                     _ADCON0bits	set	31
   388     0043                     _RD3	set	67
   389     0047                     _RD7	set	71
   390     0046                     _RD6	set	70
   391     0045                     _RD5	set	69
   392     0044                     _RD4	set	68
   393     009F                     _ADCON1bits	set	159
   394     008C                     _PIE1bits	set	140
   395     008F                     _OSCCONbits	set	143
   396     0089                     _TRISE	set	137
   397     0088                     _TRISD	set	136
   398     0087                     _TRISC	set	135
   399     0189                     _ANSELH	set	393
   400     0188                     _ANSEL	set	392
   401                           
   402                           	psect	strings
   403     0420                     __pstrings:
   404     0420                     stringtab:
   405     0420                     __stringtab:
   406     0420                     stringcode:	
   407                           ;	String table - string pointers are 1 byte each
   408                           
   409     0420                     stringdir:
   410     0420  3004               	movlw	high stringdir
   411     0421  008A               	movwf	10
   412     0422  0804               	movf	4,w
   413     0423  0A84               	incf	4,f
   414     0424  0782               	addwf	2,f
   415     0425                     __stringbase:
   416     0425  3400               	retlw	0
   417     0426                     __end_of__stringtab:
   418     0426                     STR_1:
   419     0426  3441               	retlw	65	;'A'
   420     0427  3444               	retlw	68	;'D'
   421     0428  3443               	retlw	67	;'C'
   422     0429  3400               	retlw	0
   423                           
   424                           	psect	cinit
   425     000F                     start_initialization:	
   426                           ; #config settings
   427                           
   428     000F                     __initialization:
   429                           
   430                           ; Clear objects allocated to COMMON
   431     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   432     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   433     0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   434     0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   435                           
   436                           ; Clear objects allocated to BANK0
   437     0013  1283               	bcf	3,5	;RP0=0, select bank0
   438     0014  1303               	bcf	3,6	;RP1=0, select bank0
   439     0015  01B2               	clrf	__pbssBANK0& (0+127)
   440     0016  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   441     0017                     end_of_initialization:	
   442                           ;End of C runtime variable initialization code
   443                           
   444     0017                     __end_of__initialization:
   445     0017  0183               	clrf	3
   446     0018  120A  118A  2914   	ljmp	_main	;jump to C main() function
   447                           
   448                           	psect	bssCOMMON
   449     0076                     __pbssCOMMON:
   450     0076                     _select:
   451     0076                     	ds	2
   452     0078                     _bandera:
   453     0078                     	ds	2
   454                           
   455                           	psect	bssBANK0
   456     0032                     __pbssBANK0:
   457     0032                     _adc_var:
   458     0032                     	ds	2
   459                           
   460                           	psect	cstackCOMMON
   461     0070                     __pcstackCOMMON:
   462     0070                     ?_setup:
   463     0070                     ?_Lcd_Init:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ?_Lcd_Clear:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ?_Lcd_Write_String:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0070                     ?_Lcd_Write_Char:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ?_main:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_isr:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ?_Lcd_Port:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_Lcd_Cmd:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ?_adc_read:	
   488                           ; 1 bytes @ 0x0
   489                           
   490                           
   491                           ; 2 bytes @ 0x0
   492     0070                     	ds	2
   493     0072                     ??_adc_read:
   494                           
   495                           ; 1 bytes @ 0x2
   496     0072                     	ds	2
   497     0074                     ??_isr:
   498                           
   499                           ; 1 bytes @ 0x4
   500     0074                     	ds	2
   501                           
   502                           	psect	cstackBANK0
   503     0020                     __pcstackBANK0:
   504     0020                     ??_setup:
   505     0020                     ?_adc_change_channel:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0020                     ??_Lcd_Port:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0020                     ?___awdiv:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0020                     Lcd_Port@a:	
   515                           ; 2 bytes @ 0x0
   516                           
   517     0020                     adc_change_channel@channel:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0020                     ___awdiv@divisor:	
   521                           ; 2 bytes @ 0x0
   522                           
   523                           
   524                           ; 2 bytes @ 0x0
   525     0020                     	ds	1
   526     0021                     ??_Lcd_Write_Char:
   527     0021                     ??_Lcd_Cmd:	
   528                           ; 1 bytes @ 0x1
   529                           
   530                           
   531                           ; 1 bytes @ 0x1
   532     0021                     	ds	1
   533     0022                     ?_adc_init:
   534     0022                     ??_adc_change_channel:	
   535                           ; 1 bytes @ 0x2
   536                           
   537     0022                     Lcd_Write_Char@temp:	
   538                           ; 1 bytes @ 0x2
   539                           
   540     0022                     adc_init@channel:	
   541                           ; 1 bytes @ 0x2
   542                           
   543     0022                     ___awdiv@dividend:	
   544                           ; 2 bytes @ 0x2
   545                           
   546                           
   547                           ; 2 bytes @ 0x2
   548     0022                     	ds	1
   549     0023                     Lcd_Cmd@a:
   550     0023                     Lcd_Write_Char@y:	
   551                           ; 1 bytes @ 0x3
   552                           
   553                           
   554                           ; 1 bytes @ 0x3
   555     0023                     	ds	1
   556     0024                     ??_adc_init:
   557     0024                     ??_Lcd_Init:	
   558                           ; 1 bytes @ 0x4
   559                           
   560     0024                     ??_Lcd_Clear:	
   561                           ; 1 bytes @ 0x4
   562                           
   563     0024                     ?_Lcd_Set_Cursor:	
   564                           ; 1 bytes @ 0x4
   565                           
   566     0024                     ??___awdiv:	
   567                           ; 1 bytes @ 0x4
   568                           
   569     0024                     Lcd_Set_Cursor@b:	
   570                           ; 1 bytes @ 0x4
   571                           
   572     0024                     Lcd_Write_Char@a:	
   573                           ; 1 bytes @ 0x4
   574                           
   575                           
   576                           ; 1 bytes @ 0x4
   577     0024                     	ds	1
   578     0025                     ??_Lcd_Set_Cursor:
   579     0025                     ??_Lcd_Write_String:	
   580                           ; 1 bytes @ 0x5
   581                           
   582     0025                     Lcd_Write_String@a:	
   583                           ; 1 bytes @ 0x5
   584                           
   585     0025                     ___awdiv@counter:	
   586                           ; 1 bytes @ 0x5
   587                           
   588                           
   589                           ; 1 bytes @ 0x5
   590     0025                     	ds	1
   591     0026                     Lcd_Set_Cursor@a:
   592     0026                     ___awdiv@sign:	
   593                           ; 1 bytes @ 0x6
   594                           
   595     0026                     Lcd_Write_String@i:	
   596                           ; 1 bytes @ 0x6
   597                           
   598                           
   599                           ; 2 bytes @ 0x6
   600     0026                     	ds	1
   601     0027                     Lcd_Set_Cursor@z:
   602     0027                     ___awdiv@quotient:	
   603                           ; 1 bytes @ 0x7
   604                           
   605                           
   606                           ; 2 bytes @ 0x7
   607     0027                     	ds	1
   608     0028                     Lcd_Set_Cursor@y:
   609                           
   610                           ; 1 bytes @ 0x8
   611     0028                     	ds	1
   612     0029                     ?___awmod:
   613     0029                     Lcd_Set_Cursor@temp:	
   614                           ; 2 bytes @ 0x9
   615                           
   616     0029                     ___awmod@divisor:	
   617                           ; 1 bytes @ 0x9
   618                           
   619                           
   620                           ; 2 bytes @ 0x9
   621     0029                     	ds	2
   622     002B                     ___awmod@dividend:
   623                           
   624                           ; 2 bytes @ 0xB
   625     002B                     	ds	2
   626     002D                     ??___awmod:
   627                           
   628                           ; 1 bytes @ 0xD
   629     002D                     	ds	1
   630     002E                     ___awmod@counter:
   631                           
   632                           ; 1 bytes @ 0xE
   633     002E                     	ds	1
   634     002F                     ___awmod@sign:
   635                           
   636                           ; 1 bytes @ 0xF
   637     002F                     	ds	1
   638     0030                     ??_main:
   639                           
   640                           ; 1 bytes @ 0x10
   641     0030                     	ds	2
   642                           
   643                           	psect	maintext
   644     0114                     __pmaintext:	
   645 ;;
   646 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   647 ;;
   648 ;; *************** function _main *****************
   649 ;; Defined at:
   650 ;;		line 47 in file "main.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : B00/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          0       2       0       0       0
   667 ;;      Totals:         0       2       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels required when called: 5
   670 ;; This function calls:
   671 ;;		_Lcd_Clear
   672 ;;		_Lcd_Init
   673 ;;		_Lcd_Set_Cursor
   674 ;;		_Lcd_Write_Char
   675 ;;		_Lcd_Write_String
   676 ;;		___awdiv
   677 ;;		___awmod
   678 ;;		_adc_init
   679 ;;		_setup
   680 ;; This function is called by:
   681 ;;		Startup code after reset
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685     0114                     _main:	
   686                           ;psect for function _main
   687                           
   688     0114                     l1716:	
   689                           ;incstack = 0
   690                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   691                           
   692                           
   693                           ;main.c: 48:     setup();
   694     0114  120A  118A  23FF  120A  118A  	fcall	_setup
   695                           
   696                           ;main.c: 49:     adc_init(0);
   697     0119  3000               	movlw	0
   698     011A  1283               	bcf	3,5	;RP0=0, select bank0
   699     011B  1303               	bcf	3,6	;RP1=0, select bank0
   700     011C  00A2               	movwf	adc_init@channel
   701     011D  00A3               	movwf	adc_init@channel+1
   702     011E  120A  118A  2387  120A  118A  	fcall	_adc_init
   703                           
   704                           ;main.c: 52:     Lcd_Init();
   705     0123  120A  118A  221C  120A  118A  	fcall	_Lcd_Init
   706                           
   707                           ;main.c: 53:     Lcd_Clear();
   708     0128  120A  118A  2413  120A  118A  	fcall	_Lcd_Clear
   709                           
   710                           ;main.c: 54:     Lcd_Set_Cursor(1,1);
   711     012D  1283               	bcf	3,5	;RP0=0, select bank0
   712     012E  1303               	bcf	3,6	;RP1=0, select bank0
   713     012F  01A4               	clrf	Lcd_Set_Cursor@b
   714     0130  0AA4               	incf	Lcd_Set_Cursor@b,f
   715     0131  3001               	movlw	1
   716     0132  120A  118A  22D9  120A  118A  	fcall	_Lcd_Set_Cursor
   717     0137                     l1718:
   718                           
   719                           ;main.c: 55:     Lcd_Write_String("ADC");
   720     0137  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   721     0138  120A  118A  235E  120A  118A  	fcall	_Lcd_Write_String
   722     013D                     l1720:
   723                           
   724                           ;main.c: 59:         Lcd_Set_Cursor(2,1);
   725     013D  1283               	bcf	3,5	;RP0=0, select bank0
   726     013E  1303               	bcf	3,6	;RP1=0, select bank0
   727     013F  01A4               	clrf	Lcd_Set_Cursor@b
   728     0140  0AA4               	incf	Lcd_Set_Cursor@b,f
   729     0141  3002               	movlw	2
   730     0142  120A  118A  22D9  120A  118A  	fcall	_Lcd_Set_Cursor
   731     0147                     l1722:
   732                           
   733                           ;main.c: 61:         Lcd_Write_Char('0' + (adc_var / 100));
   734     0147  3064               	movlw	100
   735     0148  1283               	bcf	3,5	;RP0=0, select bank0
   736     0149  1303               	bcf	3,6	;RP1=0, select bank0
   737     014A  00A0               	movwf	___awdiv@divisor
   738     014B  3000               	movlw	0
   739     014C  00A1               	movwf	___awdiv@divisor+1
   740     014D  0833               	movf	_adc_var+1,w
   741     014E  00A3               	movwf	___awdiv@dividend+1
   742     014F  0832               	movf	_adc_var,w
   743     0150  00A2               	movwf	___awdiv@dividend
   744     0151  120A  118A  21B3  120A  118A  	fcall	___awdiv
   745     0156  1283               	bcf	3,5	;RP0=0, select bank0
   746     0157  1303               	bcf	3,6	;RP1=0, select bank0
   747     0158  0820               	movf	?___awdiv,w
   748     0159  3E30               	addlw	48
   749     015A  120A  118A  2325  120A  118A  	fcall	_Lcd_Write_Char
   750     015F                     l1724:
   751                           
   752                           ;main.c: 62:         Lcd_Write_Char('0' + ((adc_var / 10) % 10));
   753     015F  300A               	movlw	10
   754     0160  1283               	bcf	3,5	;RP0=0, select bank0
   755     0161  1303               	bcf	3,6	;RP1=0, select bank0
   756     0162  00A9               	movwf	___awmod@divisor
   757     0163  3000               	movlw	0
   758     0164  00AA               	movwf	___awmod@divisor+1
   759     0165  300A               	movlw	10
   760     0166  00A0               	movwf	___awdiv@divisor
   761     0167  3000               	movlw	0
   762     0168  00A1               	movwf	___awdiv@divisor+1
   763     0169  0833               	movf	_adc_var+1,w
   764     016A  00A3               	movwf	___awdiv@dividend+1
   765     016B  0832               	movf	_adc_var,w
   766     016C  00A2               	movwf	___awdiv@dividend
   767     016D  120A  118A  21B3  120A  118A  	fcall	___awdiv
   768     0172  1283               	bcf	3,5	;RP0=0, select bank0
   769     0173  1303               	bcf	3,6	;RP1=0, select bank0
   770     0174  0821               	movf	?___awdiv+1,w
   771     0175  00AC               	movwf	___awmod@dividend+1
   772     0176  0820               	movf	?___awdiv,w
   773     0177  00AB               	movwf	___awmod@dividend
   774     0178  120A  118A  227E  120A  118A  	fcall	___awmod
   775     017D  1283               	bcf	3,5	;RP0=0, select bank0
   776     017E  1303               	bcf	3,6	;RP1=0, select bank0
   777     017F  0829               	movf	?___awmod,w
   778     0180  3E30               	addlw	48
   779     0181  120A  118A  2325  120A  118A  	fcall	_Lcd_Write_Char
   780     0186                     l1726:
   781                           
   782                           ;main.c: 63:         Lcd_Write_Char('0' + (adc_var % 10));
   783     0186  300A               	movlw	10
   784     0187  1283               	bcf	3,5	;RP0=0, select bank0
   785     0188  1303               	bcf	3,6	;RP1=0, select bank0
   786     0189  00A9               	movwf	___awmod@divisor
   787     018A  3000               	movlw	0
   788     018B  00AA               	movwf	___awmod@divisor+1
   789     018C  0833               	movf	_adc_var+1,w
   790     018D  00AC               	movwf	___awmod@dividend+1
   791     018E  0832               	movf	_adc_var,w
   792     018F  00AB               	movwf	___awmod@dividend
   793     0190  120A  118A  227E  120A  118A  	fcall	___awmod
   794     0195  1283               	bcf	3,5	;RP0=0, select bank0
   795     0196  1303               	bcf	3,6	;RP1=0, select bank0
   796     0197  0829               	movf	?___awmod,w
   797     0198  3E30               	addlw	48
   798     0199  120A  118A  2325  120A  118A  	fcall	_Lcd_Write_Char
   799     019E                     l1728:
   800                           
   801                           ;main.c: 65:         if (ADCON0bits.GO == 0) {
   802     019E  1283               	bcf	3,5	;RP0=0, select bank0
   803     019F  1303               	bcf	3,6	;RP1=0, select bank0
   804     01A0  189F               	btfsc	31,1	;volatile
   805     01A1  29A3               	goto	u1531
   806     01A2  29A4               	goto	u1530
   807     01A3                     u1531:
   808     01A3  293D               	goto	l1720
   809     01A4                     u1530:
   810     01A4                     l1730:
   811                           
   812                           ;main.c: 66:             ADCON0bits.GO = 1;
   813     01A4  149F               	bsf	31,1	;volatile
   814     01A5                     l1732:
   815                           
   816                           ;main.c: 67:             _delay((unsigned long)((50)*(8000000/4000.0)));
   817     01A5  3082               	movlw	130
   818     01A6  1283               	bcf	3,5	;RP0=0, select bank0
   819     01A7  1303               	bcf	3,6	;RP1=0, select bank0
   820     01A8  00B1               	movwf	??_main+1
   821     01A9  30DD               	movlw	221
   822     01AA  00B0               	movwf	??_main
   823     01AB                     u1547:
   824     01AB  0BB0               	decfsz	??_main,f
   825     01AC  29AB               	goto	u1547
   826     01AD  0BB1               	decfsz	??_main+1,f
   827     01AE  29AB               	goto	u1547
   828     01AF  293D               	goto	l1720
   829     01B0  120A  118A  280C   	ljmp	start
   830     01B3                     __end_of_main:
   831                           
   832                           	psect	text1
   833     03FF                     __ptext1:	
   834 ;; *************** function _setup *****************
   835 ;; Defined at:
   836 ;;		line 82 in file "main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0
   853 ;;      Totals:         0       0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 2
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864     03FF                     _setup:	
   865                           ;psect for function _setup
   866                           
   867     03FF                     l1576:	
   868                           ;incstack = 0
   869                           ; Regs used in _setup: [wreg+status,2+status,0]
   870                           
   871                           
   872                           ;main.c: 95:     TRISC = 0;
   873     03FF  1683               	bsf	3,5	;RP0=1, select bank1
   874     0400  1303               	bcf	3,6	;RP1=0, select bank1
   875     0401  0187               	clrf	7	;volatile
   876                           
   877                           ;main.c: 96:     TRISD = 0;
   878     0402  0188               	clrf	8	;volatile
   879                           
   880                           ;main.c: 97:     TRISE = 0;
   881     0403  0189               	clrf	9	;volatile
   882                           
   883                           ;main.c: 100:     PORTA = 0;
   884     0404  1283               	bcf	3,5	;RP0=0, select bank0
   885     0405  1303               	bcf	3,6	;RP1=0, select bank0
   886     0406  0185               	clrf	5	;volatile
   887                           
   888                           ;main.c: 101:     PORTB = 0;
   889     0407  0186               	clrf	6	;volatile
   890                           
   891                           ;main.c: 102:     PORTC = 0;
   892     0408  0187               	clrf	7	;volatile
   893                           
   894                           ;main.c: 103:     PORTD = 0;
   895     0409  0188               	clrf	8	;volatile
   896                           
   897                           ;main.c: 104:     PORTE = 0;
   898     040A  0189               	clrf	9	;volatile
   899     040B                     l1578:
   900                           
   901                           ;main.c: 112:     INTCONbits.GIE = 1;
   902     040B  178B               	bsf	11,7	;volatile
   903     040C                     l1580:
   904                           
   905                           ;main.c: 113:     INTCONbits.PEIE = 1;
   906     040C  170B               	bsf	11,6	;volatile
   907     040D                     l1582:
   908                           
   909                           ;main.c: 126:     OSCCONbits.IRCF = 0b111 ;
   910     040D  3070               	movlw	112
   911     040E  1683               	bsf	3,5	;RP0=1, select bank1
   912     040F  1303               	bcf	3,6	;RP1=0, select bank1
   913     0410  048F               	iorwf	15,f	;volatile
   914     0411                     l1584:
   915                           
   916                           ;main.c: 127:     OSCCONbits.SCS = 1;
   917     0411  140F               	bsf	15,0	;volatile
   918     0412                     l68:
   919     0412  0008               	return
   920     0413                     __end_of_setup:
   921                           
   922                           	psect	text2
   923     0387                     __ptext2:	
   924 ;; *************** function _adc_init *****************
   925 ;; Defined at:
   926 ;;		line 15 in file "ADC_setup.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  channel         2    2[BANK0 ] int 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       2       0       0       0
   941 ;;      Locals:         0       0       0       0       0
   942 ;;      Temps:          0       1       0       0       0
   943 ;;      Totals:         0       3       0       0       0
   944 ;;Total ram usage:        3 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 3
   947 ;; This function calls:
   948 ;;		_adc_change_channel
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954     0387                     _adc_init:	
   955                           ;psect for function _adc_init
   956                           
   957     0387                     l1586:	
   958                           ;incstack = 0
   959                           ; Regs used in _adc_init: [wreg+status,2+status,0+pclath+cstack]
   960                           
   961                           
   962                           ;ADC_setup.c: 17:     PIE1bits.ADIE = 1;
   963     0387  1683               	bsf	3,5	;RP0=1, select bank1
   964     0388  1303               	bcf	3,6	;RP1=0, select bank1
   965     0389  170C               	bsf	12,6	;volatile
   966                           
   967                           ;ADC_setup.c: 18:     PIR1bits.ADIF = 0;
   968     038A  1283               	bcf	3,5	;RP0=0, select bank0
   969     038B  1303               	bcf	3,6	;RP1=0, select bank0
   970     038C  130C               	bcf	12,6	;volatile
   971                           
   972                           ;ADC_setup.c: 20:     ADCON0bits.ADCS1 = 0;
   973     038D  139F               	bcf	31,7	;volatile
   974                           
   975                           ;ADC_setup.c: 21:     ADCON0bits.ADCS0 = 0;
   976     038E  131F               	bcf	31,6	;volatile
   977                           
   978                           ;ADC_setup.c: 23:     ADCON1bits.VCFG1 = 0;
   979     038F  1683               	bsf	3,5	;RP0=1, select bank1
   980     0390  1303               	bcf	3,6	;RP1=0, select bank1
   981     0391  129F               	bcf	31,5	;volatile
   982                           
   983                           ;ADC_setup.c: 24:     ADCON1bits.VCFG0 = 0;
   984     0392  121F               	bcf	31,4	;volatile
   985                           
   986                           ;ADC_setup.c: 26:     ADCON1bits.ADFM = 0;
   987     0393  139F               	bcf	31,7	;volatile
   988     0394                     l1588:
   989                           
   990                           ;ADC_setup.c: 28:     adc_change_channel(channel);
   991     0394  1283               	bcf	3,5	;RP0=0, select bank0
   992     0395  1303               	bcf	3,6	;RP1=0, select bank0
   993     0396  0823               	movf	adc_init@channel+1,w
   994     0397  00A1               	movwf	adc_change_channel@channel+1
   995     0398  0822               	movf	adc_init@channel,w
   996     0399  00A0               	movwf	adc_change_channel@channel
   997     039A  120A  118A  201B  120A  118A  	fcall	_adc_change_channel
   998     039F                     l1590:
   999                           
  1000                           ;ADC_setup.c: 30:     ADCON0bits.ADON = 1;
  1001     039F  1283               	bcf	3,5	;RP0=0, select bank0
  1002     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1003     03A1  141F               	bsf	31,0	;volatile
  1004     03A2                     l1592:
  1005                           
  1006                           ;ADC_setup.c: 31:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1007     03A2  3041               	movlw	65
  1008     03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1009     03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1010     03A5  00A4               	movwf	??_adc_init
  1011     03A6                     u1557:
  1012     03A6  0BA4               	decfsz	??_adc_init,f
  1013     03A7  2BA6               	goto	u1557
  1014     03A8  2BA9               	nop2
  1015     03A9                     l151:
  1016     03A9  0008               	return
  1017     03AA                     __end_of_adc_init:
  1018                           
  1019                           	psect	text3
  1020     001B                     __ptext3:	
  1021 ;; *************** function _adc_change_channel *****************
  1022 ;; Defined at:
  1023 ;;		line 38 in file "ADC_setup.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  channel         2    0[BANK0 ] int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       2       0       0       0
  1038 ;;      Locals:         0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0
  1040 ;;      Totals:         0       2       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 2
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_adc_init
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051     001B                     _adc_change_channel:	
  1052                           ;psect for function _adc_change_channel
  1053                           
  1054     001B                     l1492:	
  1055                           ;incstack = 0
  1056                           ; Regs used in _adc_change_channel: [wreg+status,2+status,0]
  1057                           
  1058                           
  1059                           ;ADC_setup.c: 39:     if(channel == 0){
  1060     001B  1283               	bcf	3,5	;RP0=0, select bank0
  1061     001C  1303               	bcf	3,6	;RP1=0, select bank0
  1062     001D  0820               	movf	adc_change_channel@channel,w
  1063     001E  0421               	iorwf	adc_change_channel@channel+1,w
  1064     001F  1D03               	btfss	3,2
  1065     0020  2822               	goto	u1151
  1066     0021  2823               	goto	u1150
  1067     0022                     u1151:
  1068     0022  282A               	goto	l1498
  1069     0023                     u1150:
  1070     0023                     l1494:
  1071                           
  1072                           ;ADC_setup.c: 40:         ADCON0bits.CHS = 0b0000;
  1073     0023  30C3               	movlw	-61
  1074     0024  059F               	andwf	31,f	;volatile
  1075     0025                     l1496:
  1076                           
  1077                           ;ADC_setup.c: 41:         ANSEL = ANSEL | 0b00000001;
  1078     0025  1683               	bsf	3,5	;RP0=1, select bank3
  1079     0026  1703               	bsf	3,6	;RP1=1, select bank3
  1080     0027  0808               	movf	8,w	;volatile
  1081     0028  3801               	iorlw	1
  1082     0029  0088               	movwf	8	;volatile
  1083     002A                     l1498:
  1084                           
  1085                           ;ADC_setup.c: 43:     if(channel == 1){
  1086     002A  1283               	bcf	3,5	;RP0=0, select bank0
  1087     002B  1303               	bcf	3,6	;RP1=0, select bank0
  1088     002C  0320               	decf	adc_change_channel@channel,w
  1089     002D  0421               	iorwf	adc_change_channel@channel+1,w
  1090     002E  1D03               	btfss	3,2
  1091     002F  2831               	goto	u1161
  1092     0030  2832               	goto	u1160
  1093     0031                     u1161:
  1094     0031  283B               	goto	l1504
  1095     0032                     u1160:
  1096     0032                     l1500:
  1097                           
  1098                           ;ADC_setup.c: 44:         ADCON0bits.CHS = 0b0001;
  1099     0032  081F               	movf	31,w	;volatile
  1100     0033  39C3               	andlw	-61
  1101     0034  3804               	iorlw	4
  1102     0035  009F               	movwf	31	;volatile
  1103     0036                     l1502:
  1104                           
  1105                           ;ADC_setup.c: 45:         ANSEL = ANSEL | 0b00000010;
  1106     0036  1683               	bsf	3,5	;RP0=1, select bank3
  1107     0037  1703               	bsf	3,6	;RP1=1, select bank3
  1108     0038  0808               	movf	8,w	;volatile
  1109     0039  3802               	iorlw	2
  1110     003A  0088               	movwf	8	;volatile
  1111     003B                     l1504:
  1112                           
  1113                           ;ADC_setup.c: 47:     if(channel == 2){
  1114     003B  3002               	movlw	2
  1115     003C  1283               	bcf	3,5	;RP0=0, select bank0
  1116     003D  1303               	bcf	3,6	;RP1=0, select bank0
  1117     003E  0620               	xorwf	adc_change_channel@channel,w
  1118     003F  0421               	iorwf	adc_change_channel@channel+1,w
  1119     0040  1D03               	btfss	3,2
  1120     0041  2843               	goto	u1171
  1121     0042  2844               	goto	u1170
  1122     0043                     u1171:
  1123     0043  284D               	goto	l1510
  1124     0044                     u1170:
  1125     0044                     l1506:
  1126                           
  1127                           ;ADC_setup.c: 48:         ADCON0bits.CHS = 0b0010;
  1128     0044  081F               	movf	31,w	;volatile
  1129     0045  39C3               	andlw	-61
  1130     0046  3808               	iorlw	8
  1131     0047  009F               	movwf	31	;volatile
  1132     0048                     l1508:
  1133                           
  1134                           ;ADC_setup.c: 49:         ANSEL = ANSEL | 0b00000100;
  1135     0048  1683               	bsf	3,5	;RP0=1, select bank3
  1136     0049  1703               	bsf	3,6	;RP1=1, select bank3
  1137     004A  0808               	movf	8,w	;volatile
  1138     004B  3804               	iorlw	4
  1139     004C  0088               	movwf	8	;volatile
  1140     004D                     l1510:
  1141                           
  1142                           ;ADC_setup.c: 51:     if(channel == 3){
  1143     004D  3003               	movlw	3
  1144     004E  1283               	bcf	3,5	;RP0=0, select bank0
  1145     004F  1303               	bcf	3,6	;RP1=0, select bank0
  1146     0050  0620               	xorwf	adc_change_channel@channel,w
  1147     0051  0421               	iorwf	adc_change_channel@channel+1,w
  1148     0052  1D03               	btfss	3,2
  1149     0053  2855               	goto	u1181
  1150     0054  2856               	goto	u1180
  1151     0055                     u1181:
  1152     0055  285F               	goto	l1516
  1153     0056                     u1180:
  1154     0056                     l1512:
  1155                           
  1156                           ;ADC_setup.c: 52:         ADCON0bits.CHS = 0b0011;
  1157     0056  081F               	movf	31,w	;volatile
  1158     0057  39C3               	andlw	-61
  1159     0058  380C               	iorlw	12
  1160     0059  009F               	movwf	31	;volatile
  1161     005A                     l1514:
  1162                           
  1163                           ;ADC_setup.c: 53:         ANSEL = ANSEL | 0b00001000;
  1164     005A  1683               	bsf	3,5	;RP0=1, select bank3
  1165     005B  1703               	bsf	3,6	;RP1=1, select bank3
  1166     005C  0808               	movf	8,w	;volatile
  1167     005D  3808               	iorlw	8
  1168     005E  0088               	movwf	8	;volatile
  1169     005F                     l1516:
  1170                           
  1171                           ;ADC_setup.c: 55:     if(channel == 4){
  1172     005F  3004               	movlw	4
  1173     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0061  1303               	bcf	3,6	;RP1=0, select bank0
  1175     0062  0620               	xorwf	adc_change_channel@channel,w
  1176     0063  0421               	iorwf	adc_change_channel@channel+1,w
  1177     0064  1D03               	btfss	3,2
  1178     0065  2867               	goto	u1191
  1179     0066  2868               	goto	u1190
  1180     0067                     u1191:
  1181     0067  2871               	goto	l1522
  1182     0068                     u1190:
  1183     0068                     l1518:
  1184                           
  1185                           ;ADC_setup.c: 56:         ADCON0bits.CHS = 0b0100;
  1186     0068  081F               	movf	31,w	;volatile
  1187     0069  39C3               	andlw	-61
  1188     006A  3810               	iorlw	16
  1189     006B  009F               	movwf	31	;volatile
  1190     006C                     l1520:
  1191                           
  1192                           ;ADC_setup.c: 57:         ANSEL = ANSEL | 0b00010000;
  1193     006C  1683               	bsf	3,5	;RP0=1, select bank3
  1194     006D  1703               	bsf	3,6	;RP1=1, select bank3
  1195     006E  0808               	movf	8,w	;volatile
  1196     006F  3810               	iorlw	16
  1197     0070  0088               	movwf	8	;volatile
  1198     0071                     l1522:
  1199                           
  1200                           ;ADC_setup.c: 59:     if(channel == 5){
  1201     0071  3005               	movlw	5
  1202     0072  1283               	bcf	3,5	;RP0=0, select bank0
  1203     0073  1303               	bcf	3,6	;RP1=0, select bank0
  1204     0074  0620               	xorwf	adc_change_channel@channel,w
  1205     0075  0421               	iorwf	adc_change_channel@channel+1,w
  1206     0076  1D03               	btfss	3,2
  1207     0077  2879               	goto	u1201
  1208     0078  287A               	goto	u1200
  1209     0079                     u1201:
  1210     0079  2883               	goto	l1528
  1211     007A                     u1200:
  1212     007A                     l1524:
  1213                           
  1214                           ;ADC_setup.c: 60:         ADCON0bits.CHS = 0b0101;
  1215     007A  081F               	movf	31,w	;volatile
  1216     007B  39C3               	andlw	-61
  1217     007C  3814               	iorlw	20
  1218     007D  009F               	movwf	31	;volatile
  1219     007E                     l1526:
  1220                           
  1221                           ;ADC_setup.c: 61:         ANSEL = ANSEL | 0b00100000;
  1222     007E  1683               	bsf	3,5	;RP0=1, select bank3
  1223     007F  1703               	bsf	3,6	;RP1=1, select bank3
  1224     0080  0808               	movf	8,w	;volatile
  1225     0081  3820               	iorlw	32
  1226     0082  0088               	movwf	8	;volatile
  1227     0083                     l1528:
  1228                           
  1229                           ;ADC_setup.c: 63:     if(channel == 6){
  1230     0083  3006               	movlw	6
  1231     0084  1283               	bcf	3,5	;RP0=0, select bank0
  1232     0085  1303               	bcf	3,6	;RP1=0, select bank0
  1233     0086  0620               	xorwf	adc_change_channel@channel,w
  1234     0087  0421               	iorwf	adc_change_channel@channel+1,w
  1235     0088  1D03               	btfss	3,2
  1236     0089  288B               	goto	u1211
  1237     008A  288C               	goto	u1210
  1238     008B                     u1211:
  1239     008B  2895               	goto	l1534
  1240     008C                     u1210:
  1241     008C                     l1530:
  1242                           
  1243                           ;ADC_setup.c: 64:         ADCON0bits.CHS = 0b0110;
  1244     008C  081F               	movf	31,w	;volatile
  1245     008D  39C3               	andlw	-61
  1246     008E  3818               	iorlw	24
  1247     008F  009F               	movwf	31	;volatile
  1248     0090                     l1532:
  1249                           
  1250                           ;ADC_setup.c: 65:         ANSEL = ANSEL | 0b01000000;
  1251     0090  1683               	bsf	3,5	;RP0=1, select bank3
  1252     0091  1703               	bsf	3,6	;RP1=1, select bank3
  1253     0092  0808               	movf	8,w	;volatile
  1254     0093  3840               	iorlw	64
  1255     0094  0088               	movwf	8	;volatile
  1256     0095                     l1534:
  1257                           
  1258                           ;ADC_setup.c: 67:     if(channel == 7){
  1259     0095  3007               	movlw	7
  1260     0096  1283               	bcf	3,5	;RP0=0, select bank0
  1261     0097  1303               	bcf	3,6	;RP1=0, select bank0
  1262     0098  0620               	xorwf	adc_change_channel@channel,w
  1263     0099  0421               	iorwf	adc_change_channel@channel+1,w
  1264     009A  1D03               	btfss	3,2
  1265     009B  289D               	goto	u1221
  1266     009C  289E               	goto	u1220
  1267     009D                     u1221:
  1268     009D  28A7               	goto	l1540
  1269     009E                     u1220:
  1270     009E                     l1536:
  1271                           
  1272                           ;ADC_setup.c: 68:         ADCON0bits.CHS = 0b0111;
  1273     009E  081F               	movf	31,w	;volatile
  1274     009F  39C3               	andlw	-61
  1275     00A0  381C               	iorlw	28
  1276     00A1  009F               	movwf	31	;volatile
  1277     00A2                     l1538:
  1278                           
  1279                           ;ADC_setup.c: 69:         ANSEL = ANSEL | 0b10000000;
  1280     00A2  1683               	bsf	3,5	;RP0=1, select bank3
  1281     00A3  1703               	bsf	3,6	;RP1=1, select bank3
  1282     00A4  0808               	movf	8,w	;volatile
  1283     00A5  3880               	iorlw	128
  1284     00A6  0088               	movwf	8	;volatile
  1285     00A7                     l1540:
  1286                           
  1287                           ;ADC_setup.c: 71:     if(channel == 8){
  1288     00A7  3008               	movlw	8
  1289     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1290     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1291     00AA  0620               	xorwf	adc_change_channel@channel,w
  1292     00AB  0421               	iorwf	adc_change_channel@channel+1,w
  1293     00AC  1D03               	btfss	3,2
  1294     00AD  28AF               	goto	u1231
  1295     00AE  28B0               	goto	u1230
  1296     00AF                     u1231:
  1297     00AF  28B9               	goto	l1546
  1298     00B0                     u1230:
  1299     00B0                     l1542:
  1300                           
  1301                           ;ADC_setup.c: 72:         ADCON0bits.CHS = 0b1000;
  1302     00B0  081F               	movf	31,w	;volatile
  1303     00B1  39C3               	andlw	-61
  1304     00B2  3820               	iorlw	32
  1305     00B3  009F               	movwf	31	;volatile
  1306     00B4                     l1544:
  1307                           
  1308                           ;ADC_setup.c: 73:         ANSELH = ANSELH | 0b00000001;
  1309     00B4  1683               	bsf	3,5	;RP0=1, select bank3
  1310     00B5  1703               	bsf	3,6	;RP1=1, select bank3
  1311     00B6  0809               	movf	9,w	;volatile
  1312     00B7  3801               	iorlw	1
  1313     00B8  0089               	movwf	9	;volatile
  1314     00B9                     l1546:
  1315                           
  1316                           ;ADC_setup.c: 75:     if(channel == 9){
  1317     00B9  3009               	movlw	9
  1318     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1319     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1320     00BC  0620               	xorwf	adc_change_channel@channel,w
  1321     00BD  0421               	iorwf	adc_change_channel@channel+1,w
  1322     00BE  1D03               	btfss	3,2
  1323     00BF  28C1               	goto	u1241
  1324     00C0  28C2               	goto	u1240
  1325     00C1                     u1241:
  1326     00C1  28CB               	goto	l1552
  1327     00C2                     u1240:
  1328     00C2                     l1548:
  1329                           
  1330                           ;ADC_setup.c: 76:         ADCON0bits.CHS = 0b1001;
  1331     00C2  081F               	movf	31,w	;volatile
  1332     00C3  39C3               	andlw	-61
  1333     00C4  3824               	iorlw	36
  1334     00C5  009F               	movwf	31	;volatile
  1335     00C6                     l1550:
  1336                           
  1337                           ;ADC_setup.c: 77:         ANSELH = ANSELH | 0b00000010;
  1338     00C6  1683               	bsf	3,5	;RP0=1, select bank3
  1339     00C7  1703               	bsf	3,6	;RP1=1, select bank3
  1340     00C8  0809               	movf	9,w	;volatile
  1341     00C9  3802               	iorlw	2
  1342     00CA  0089               	movwf	9	;volatile
  1343     00CB                     l1552:
  1344                           
  1345                           ;ADC_setup.c: 79:     if(channel == 10){
  1346     00CB  300A               	movlw	10
  1347     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1348     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1349     00CE  0620               	xorwf	adc_change_channel@channel,w
  1350     00CF  0421               	iorwf	adc_change_channel@channel+1,w
  1351     00D0  1D03               	btfss	3,2
  1352     00D1  28D3               	goto	u1251
  1353     00D2  28D4               	goto	u1250
  1354     00D3                     u1251:
  1355     00D3  28DD               	goto	l1558
  1356     00D4                     u1250:
  1357     00D4                     l1554:
  1358                           
  1359                           ;ADC_setup.c: 80:         ADCON0bits.CHS = 0b1010;
  1360     00D4  081F               	movf	31,w	;volatile
  1361     00D5  39C3               	andlw	-61
  1362     00D6  3828               	iorlw	40
  1363     00D7  009F               	movwf	31	;volatile
  1364     00D8                     l1556:
  1365                           
  1366                           ;ADC_setup.c: 81:         ANSELH = ANSELH | 0b00000100;
  1367     00D8  1683               	bsf	3,5	;RP0=1, select bank3
  1368     00D9  1703               	bsf	3,6	;RP1=1, select bank3
  1369     00DA  0809               	movf	9,w	;volatile
  1370     00DB  3804               	iorlw	4
  1371     00DC  0089               	movwf	9	;volatile
  1372     00DD                     l1558:
  1373                           
  1374                           ;ADC_setup.c: 83:     if(channel == 11){
  1375     00DD  300B               	movlw	11
  1376     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1377     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1378     00E0  0620               	xorwf	adc_change_channel@channel,w
  1379     00E1  0421               	iorwf	adc_change_channel@channel+1,w
  1380     00E2  1D03               	btfss	3,2
  1381     00E3  28E5               	goto	u1261
  1382     00E4  28E6               	goto	u1260
  1383     00E5                     u1261:
  1384     00E5  28EF               	goto	l1564
  1385     00E6                     u1260:
  1386     00E6                     l1560:
  1387                           
  1388                           ;ADC_setup.c: 84:         ADCON0bits.CHS = 0b1011;
  1389     00E6  081F               	movf	31,w	;volatile
  1390     00E7  39C3               	andlw	-61
  1391     00E8  382C               	iorlw	44
  1392     00E9  009F               	movwf	31	;volatile
  1393     00EA                     l1562:
  1394                           
  1395                           ;ADC_setup.c: 85:         ANSELH = ANSELH | 0b00001000;
  1396     00EA  1683               	bsf	3,5	;RP0=1, select bank3
  1397     00EB  1703               	bsf	3,6	;RP1=1, select bank3
  1398     00EC  0809               	movf	9,w	;volatile
  1399     00ED  3808               	iorlw	8
  1400     00EE  0089               	movwf	9	;volatile
  1401     00EF                     l1564:
  1402                           
  1403                           ;ADC_setup.c: 87:     if(channel == 12){
  1404     00EF  300C               	movlw	12
  1405     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1406     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1407     00F2  0620               	xorwf	adc_change_channel@channel,w
  1408     00F3  0421               	iorwf	adc_change_channel@channel+1,w
  1409     00F4  1D03               	btfss	3,2
  1410     00F5  28F7               	goto	u1271
  1411     00F6  28F8               	goto	u1270
  1412     00F7                     u1271:
  1413     00F7  2901               	goto	l1570
  1414     00F8                     u1270:
  1415     00F8                     l1566:
  1416                           
  1417                           ;ADC_setup.c: 88:         ADCON0bits.CHS = 0b1100;
  1418     00F8  081F               	movf	31,w	;volatile
  1419     00F9  39C3               	andlw	-61
  1420     00FA  3830               	iorlw	48
  1421     00FB  009F               	movwf	31	;volatile
  1422     00FC                     l1568:
  1423                           
  1424                           ;ADC_setup.c: 89:         ANSELH = ANSELH | 0b00010000;
  1425     00FC  1683               	bsf	3,5	;RP0=1, select bank3
  1426     00FD  1703               	bsf	3,6	;RP1=1, select bank3
  1427     00FE  0809               	movf	9,w	;volatile
  1428     00FF  3810               	iorlw	16
  1429     0100  0089               	movwf	9	;volatile
  1430     0101                     l1570:
  1431                           
  1432                           ;ADC_setup.c: 91:     if(channel == 13){
  1433     0101  300D               	movlw	13
  1434     0102  1283               	bcf	3,5	;RP0=0, select bank0
  1435     0103  1303               	bcf	3,6	;RP1=0, select bank0
  1436     0104  0620               	xorwf	adc_change_channel@channel,w
  1437     0105  0421               	iorwf	adc_change_channel@channel+1,w
  1438     0106  1D03               	btfss	3,2
  1439     0107  2909               	goto	u1281
  1440     0108  290A               	goto	u1280
  1441     0109                     u1281:
  1442     0109  2913               	goto	l171
  1443     010A                     u1280:
  1444     010A                     l1572:
  1445                           
  1446                           ;ADC_setup.c: 92:         ADCON0bits.CHS = 0b1101;
  1447     010A  081F               	movf	31,w	;volatile
  1448     010B  39C3               	andlw	-61
  1449     010C  3834               	iorlw	52
  1450     010D  009F               	movwf	31	;volatile
  1451     010E                     l1574:
  1452                           
  1453                           ;ADC_setup.c: 93:         ANSELH = ANSELH | 0b00100000;
  1454     010E  1683               	bsf	3,5	;RP0=1, select bank3
  1455     010F  1703               	bsf	3,6	;RP1=1, select bank3
  1456     0110  0809               	movf	9,w	;volatile
  1457     0111  3820               	iorlw	32
  1458     0112  0089               	movwf	9	;volatile
  1459     0113                     l171:
  1460     0113  0008               	return
  1461     0114                     __end_of_adc_change_channel:
  1462                           
  1463                           	psect	text4
  1464     027E                     __ptext4:	
  1465 ;; *************** function ___awmod *****************
  1466 ;; Defined at:
  1467 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  divisor         2    9[BANK0 ] int 
  1470 ;;  dividend        2   11[BANK0 ] int 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  sign            1   15[BANK0 ] unsigned char 
  1473 ;;  counter         1   14[BANK0 ] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  2    9[BANK0 ] int 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       4       0       0       0
  1484 ;;      Locals:         0       2       0       0       0
  1485 ;;      Temps:          0       1       0       0       0
  1486 ;;      Totals:         0       7       0       0       0
  1487 ;;Total ram usage:        7 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 2
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497     027E                     ___awmod:	
  1498                           ;psect for function ___awmod
  1499                           
  1500     027E                     l1678:	
  1501                           ;incstack = 0
  1502                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1503                           
  1504     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1505     027F  1303               	bcf	3,6	;RP1=0, select bank0
  1506     0280  01AF               	clrf	___awmod@sign
  1507     0281                     l1680:
  1508     0281  1FAC               	btfss	___awmod@dividend+1,7
  1509     0282  2A84               	goto	u1441
  1510     0283  2A85               	goto	u1440
  1511     0284                     u1441:
  1512     0284  2A8C               	goto	l1686
  1513     0285                     u1440:
  1514     0285                     l1682:
  1515     0285  09AB               	comf	___awmod@dividend,f
  1516     0286  09AC               	comf	___awmod@dividend+1,f
  1517     0287  0AAB               	incf	___awmod@dividend,f
  1518     0288  1903               	skipnz
  1519     0289  0AAC               	incf	___awmod@dividend+1,f
  1520     028A                     l1684:
  1521     028A  01AF               	clrf	___awmod@sign
  1522     028B  0AAF               	incf	___awmod@sign,f
  1523     028C                     l1686:
  1524     028C  1FAA               	btfss	___awmod@divisor+1,7
  1525     028D  2A8F               	goto	u1451
  1526     028E  2A90               	goto	u1450
  1527     028F                     u1451:
  1528     028F  2A95               	goto	l1690
  1529     0290                     u1450:
  1530     0290                     l1688:
  1531     0290  09A9               	comf	___awmod@divisor,f
  1532     0291  09AA               	comf	___awmod@divisor+1,f
  1533     0292  0AA9               	incf	___awmod@divisor,f
  1534     0293  1903               	skipnz
  1535     0294  0AAA               	incf	___awmod@divisor+1,f
  1536     0295                     l1690:
  1537     0295  0829               	movf	___awmod@divisor,w
  1538     0296  042A               	iorwf	___awmod@divisor+1,w
  1539     0297  1903               	btfsc	3,2
  1540     0298  2A9A               	goto	u1461
  1541     0299  2A9B               	goto	u1460
  1542     029A                     u1461:
  1543     029A  2ACA               	goto	l1708
  1544     029B                     u1460:
  1545     029B                     l1692:
  1546     029B  01AE               	clrf	___awmod@counter
  1547     029C  0AAE               	incf	___awmod@counter,f
  1548     029D  2AA9               	goto	l1698
  1549     029E                     l1694:
  1550     029E  3001               	movlw	1
  1551     029F                     u1475:
  1552     029F  1003               	clrc
  1553     02A0  0DA9               	rlf	___awmod@divisor,f
  1554     02A1  0DAA               	rlf	___awmod@divisor+1,f
  1555     02A2  3EFF               	addlw	-1
  1556     02A3  1D03               	skipz
  1557     02A4  2A9F               	goto	u1475
  1558     02A5                     l1696:
  1559     02A5  3001               	movlw	1
  1560     02A6  00AD               	movwf	??___awmod
  1561     02A7  082D               	movf	??___awmod,w
  1562     02A8  07AE               	addwf	___awmod@counter,f
  1563     02A9                     l1698:
  1564     02A9  1FAA               	btfss	___awmod@divisor+1,7
  1565     02AA  2AAC               	goto	u1481
  1566     02AB  2AAD               	goto	u1480
  1567     02AC                     u1481:
  1568     02AC  2A9E               	goto	l1694
  1569     02AD                     u1480:
  1570     02AD                     l1700:
  1571     02AD  082A               	movf	___awmod@divisor+1,w
  1572     02AE  022C               	subwf	___awmod@dividend+1,w
  1573     02AF  1D03               	skipz
  1574     02B0  2AB3               	goto	u1495
  1575     02B1  0829               	movf	___awmod@divisor,w
  1576     02B2  022B               	subwf	___awmod@dividend,w
  1577     02B3                     u1495:
  1578     02B3  1C03               	skipc
  1579     02B4  2AB6               	goto	u1491
  1580     02B5  2AB7               	goto	u1490
  1581     02B6                     u1491:
  1582     02B6  2ABD               	goto	l1704
  1583     02B7                     u1490:
  1584     02B7                     l1702:
  1585     02B7  0829               	movf	___awmod@divisor,w
  1586     02B8  02AB               	subwf	___awmod@dividend,f
  1587     02B9  082A               	movf	___awmod@divisor+1,w
  1588     02BA  1C03               	skipc
  1589     02BB  03AC               	decf	___awmod@dividend+1,f
  1590     02BC  02AC               	subwf	___awmod@dividend+1,f
  1591     02BD                     l1704:
  1592     02BD  3001               	movlw	1
  1593     02BE                     u1505:
  1594     02BE  1003               	clrc
  1595     02BF  0CAA               	rrf	___awmod@divisor+1,f
  1596     02C0  0CA9               	rrf	___awmod@divisor,f
  1597     02C1  3EFF               	addlw	-1
  1598     02C2  1D03               	skipz
  1599     02C3  2ABE               	goto	u1505
  1600     02C4                     l1706:
  1601     02C4  3001               	movlw	1
  1602     02C5  02AE               	subwf	___awmod@counter,f
  1603     02C6  1D03               	btfss	3,2
  1604     02C7  2AC9               	goto	u1511
  1605     02C8  2ACA               	goto	u1510
  1606     02C9                     u1511:
  1607     02C9  2AAD               	goto	l1700
  1608     02CA                     u1510:
  1609     02CA                     l1708:
  1610     02CA  082F               	movf	___awmod@sign,w
  1611     02CB  1903               	btfsc	3,2
  1612     02CC  2ACE               	goto	u1521
  1613     02CD  2ACF               	goto	u1520
  1614     02CE                     u1521:
  1615     02CE  2AD4               	goto	l1712
  1616     02CF                     u1520:
  1617     02CF                     l1710:
  1618     02CF  09AB               	comf	___awmod@dividend,f
  1619     02D0  09AC               	comf	___awmod@dividend+1,f
  1620     02D1  0AAB               	incf	___awmod@dividend,f
  1621     02D2  1903               	skipnz
  1622     02D3  0AAC               	incf	___awmod@dividend+1,f
  1623     02D4                     l1712:
  1624     02D4  082C               	movf	___awmod@dividend+1,w
  1625     02D5  00AA               	movwf	?___awmod+1
  1626     02D6  082B               	movf	___awmod@dividend,w
  1627     02D7  00A9               	movwf	?___awmod
  1628     02D8                     l440:
  1629     02D8  0008               	return
  1630     02D9                     __end_of___awmod:
  1631                           
  1632                           	psect	text5
  1633     01B3                     __ptext5:	
  1634 ;; *************** function ___awdiv *****************
  1635 ;; Defined at:
  1636 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  divisor         2    0[BANK0 ] int 
  1639 ;;  dividend        2    2[BANK0 ] int 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  quotient        2    7[BANK0 ] int 
  1642 ;;  sign            1    6[BANK0 ] unsigned char 
  1643 ;;  counter         1    5[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  2    0[BANK0 ] int 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       4       0       0       0
  1654 ;;      Locals:         0       4       0       0       0
  1655 ;;      Temps:          0       1       0       0       0
  1656 ;;      Totals:         0       9       0       0       0
  1657 ;;Total ram usage:        9 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 2
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667     01B3                     ___awdiv:	
  1668                           ;psect for function ___awdiv
  1669                           
  1670     01B3                     l1634:	
  1671                           ;incstack = 0
  1672                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1673                           
  1674     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1675     01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1676     01B5  01A6               	clrf	___awdiv@sign
  1677     01B6                     l1636:
  1678     01B6  1FA1               	btfss	___awdiv@divisor+1,7
  1679     01B7  29B9               	goto	u1341
  1680     01B8  29BA               	goto	u1340
  1681     01B9                     u1341:
  1682     01B9  29C1               	goto	l1642
  1683     01BA                     u1340:
  1684     01BA                     l1638:
  1685     01BA  09A0               	comf	___awdiv@divisor,f
  1686     01BB  09A1               	comf	___awdiv@divisor+1,f
  1687     01BC  0AA0               	incf	___awdiv@divisor,f
  1688     01BD  1903               	skipnz
  1689     01BE  0AA1               	incf	___awdiv@divisor+1,f
  1690     01BF                     l1640:
  1691     01BF  01A6               	clrf	___awdiv@sign
  1692     01C0  0AA6               	incf	___awdiv@sign,f
  1693     01C1                     l1642:
  1694     01C1  1FA3               	btfss	___awdiv@dividend+1,7
  1695     01C2  29C4               	goto	u1351
  1696     01C3  29C5               	goto	u1350
  1697     01C4                     u1351:
  1698     01C4  29CE               	goto	l1648
  1699     01C5                     u1350:
  1700     01C5                     l1644:
  1701     01C5  09A2               	comf	___awdiv@dividend,f
  1702     01C6  09A3               	comf	___awdiv@dividend+1,f
  1703     01C7  0AA2               	incf	___awdiv@dividend,f
  1704     01C8  1903               	skipnz
  1705     01C9  0AA3               	incf	___awdiv@dividend+1,f
  1706     01CA                     l1646:
  1707     01CA  3001               	movlw	1
  1708     01CB  00A4               	movwf	??___awdiv
  1709     01CC  0824               	movf	??___awdiv,w
  1710     01CD  06A6               	xorwf	___awdiv@sign,f
  1711     01CE                     l1648:
  1712     01CE  01A7               	clrf	___awdiv@quotient
  1713     01CF  01A8               	clrf	___awdiv@quotient+1
  1714     01D0                     l1650:
  1715     01D0  0820               	movf	___awdiv@divisor,w
  1716     01D1  0421               	iorwf	___awdiv@divisor+1,w
  1717     01D2  1903               	btfsc	3,2
  1718     01D3  29D5               	goto	u1361
  1719     01D4  29D6               	goto	u1360
  1720     01D5                     u1361:
  1721     01D5  2A0D               	goto	l1670
  1722     01D6                     u1360:
  1723     01D6                     l1652:
  1724     01D6  01A5               	clrf	___awdiv@counter
  1725     01D7  0AA5               	incf	___awdiv@counter,f
  1726     01D8  29E4               	goto	l1658
  1727     01D9                     l1654:
  1728     01D9  3001               	movlw	1
  1729     01DA                     u1375:
  1730     01DA  1003               	clrc
  1731     01DB  0DA0               	rlf	___awdiv@divisor,f
  1732     01DC  0DA1               	rlf	___awdiv@divisor+1,f
  1733     01DD  3EFF               	addlw	-1
  1734     01DE  1D03               	skipz
  1735     01DF  29DA               	goto	u1375
  1736     01E0                     l1656:
  1737     01E0  3001               	movlw	1
  1738     01E1  00A4               	movwf	??___awdiv
  1739     01E2  0824               	movf	??___awdiv,w
  1740     01E3  07A5               	addwf	___awdiv@counter,f
  1741     01E4                     l1658:
  1742     01E4  1FA1               	btfss	___awdiv@divisor+1,7
  1743     01E5  29E7               	goto	u1381
  1744     01E6  29E8               	goto	u1380
  1745     01E7                     u1381:
  1746     01E7  29D9               	goto	l1654
  1747     01E8                     u1380:
  1748     01E8                     l1660:
  1749     01E8  3001               	movlw	1
  1750     01E9                     u1395:
  1751     01E9  1003               	clrc
  1752     01EA  0DA7               	rlf	___awdiv@quotient,f
  1753     01EB  0DA8               	rlf	___awdiv@quotient+1,f
  1754     01EC  3EFF               	addlw	-1
  1755     01ED  1D03               	skipz
  1756     01EE  29E9               	goto	u1395
  1757     01EF  0821               	movf	___awdiv@divisor+1,w
  1758     01F0  0223               	subwf	___awdiv@dividend+1,w
  1759     01F1  1D03               	skipz
  1760     01F2  29F5               	goto	u1405
  1761     01F3  0820               	movf	___awdiv@divisor,w
  1762     01F4  0222               	subwf	___awdiv@dividend,w
  1763     01F5                     u1405:
  1764     01F5  1C03               	skipc
  1765     01F6  29F8               	goto	u1401
  1766     01F7  29F9               	goto	u1400
  1767     01F8                     u1401:
  1768     01F8  2A00               	goto	l1666
  1769     01F9                     u1400:
  1770     01F9                     l1662:
  1771     01F9  0820               	movf	___awdiv@divisor,w
  1772     01FA  02A2               	subwf	___awdiv@dividend,f
  1773     01FB  0821               	movf	___awdiv@divisor+1,w
  1774     01FC  1C03               	skipc
  1775     01FD  03A3               	decf	___awdiv@dividend+1,f
  1776     01FE  02A3               	subwf	___awdiv@dividend+1,f
  1777     01FF                     l1664:
  1778     01FF  1427               	bsf	___awdiv@quotient,0
  1779     0200                     l1666:
  1780     0200  3001               	movlw	1
  1781     0201                     u1415:
  1782     0201  1003               	clrc
  1783     0202  0CA1               	rrf	___awdiv@divisor+1,f
  1784     0203  0CA0               	rrf	___awdiv@divisor,f
  1785     0204  3EFF               	addlw	-1
  1786     0205  1D03               	skipz
  1787     0206  2A01               	goto	u1415
  1788     0207                     l1668:
  1789     0207  3001               	movlw	1
  1790     0208  02A5               	subwf	___awdiv@counter,f
  1791     0209  1D03               	btfss	3,2
  1792     020A  2A0C               	goto	u1421
  1793     020B  2A0D               	goto	u1420
  1794     020C                     u1421:
  1795     020C  29E8               	goto	l1660
  1796     020D                     u1420:
  1797     020D                     l1670:
  1798     020D  0826               	movf	___awdiv@sign,w
  1799     020E  1903               	btfsc	3,2
  1800     020F  2A11               	goto	u1431
  1801     0210  2A12               	goto	u1430
  1802     0211                     u1431:
  1803     0211  2A17               	goto	l1674
  1804     0212                     u1430:
  1805     0212                     l1672:
  1806     0212  09A7               	comf	___awdiv@quotient,f
  1807     0213  09A8               	comf	___awdiv@quotient+1,f
  1808     0214  0AA7               	incf	___awdiv@quotient,f
  1809     0215  1903               	skipnz
  1810     0216  0AA8               	incf	___awdiv@quotient+1,f
  1811     0217                     l1674:
  1812     0217  0828               	movf	___awdiv@quotient+1,w
  1813     0218  00A1               	movwf	?___awdiv+1
  1814     0219  0827               	movf	___awdiv@quotient,w
  1815     021A  00A0               	movwf	?___awdiv
  1816     021B                     l427:
  1817     021B  0008               	return
  1818     021C                     __end_of___awdiv:
  1819                           
  1820                           	psect	text6
  1821     035E                     __ptext6:	
  1822 ;; *************** function _Lcd_Write_String *****************
  1823 ;; Defined at:
  1824 ;;		line 98 in file "LCD.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  a               1    wreg     PTR unsigned char 
  1827 ;;		 -> STR_1(4), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  a               1    5[BANK0 ] PTR unsigned char 
  1830 ;;		 -> STR_1(4), 
  1831 ;;  i               2    6[BANK0 ] int 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         0       3       0       0       0
  1843 ;;      Temps:          0       0       0       0       0
  1844 ;;      Totals:         0       3       0       0       0
  1845 ;;Total ram usage:        3 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 4
  1848 ;; This function calls:
  1849 ;;		_Lcd_Write_Char
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855     035E                     _Lcd_Write_String:	
  1856                           ;psect for function _Lcd_Write_String
  1857                           
  1858                           
  1859                           ;incstack = 0
  1860                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1861                           ;Lcd_Write_String@a stored from wreg
  1862     035E  1283               	bcf	3,5	;RP0=0, select bank0
  1863     035F  1303               	bcf	3,6	;RP1=0, select bank0
  1864     0360  00A5               	movwf	Lcd_Write_String@a
  1865     0361                     l1626:
  1866                           
  1867                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1868     0361  01A6               	clrf	Lcd_Write_String@i
  1869     0362  01A7               	clrf	Lcd_Write_String@i+1
  1870     0363  2B79               	goto	l1632
  1871     0364                     l1628:
  1872                           
  1873                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1874     0364  0826               	movf	Lcd_Write_String@i,w
  1875     0365  0725               	addwf	Lcd_Write_String@a,w
  1876     0366  0084               	movwf	4
  1877     0367  120A  118A  2420  120A  118A  	fcall	stringdir
  1878     036C  120A  118A  2325  120A  118A  	fcall	_Lcd_Write_Char
  1879     0371                     l1630:
  1880     0371  3001               	movlw	1
  1881     0372  1283               	bcf	3,5	;RP0=0, select bank0
  1882     0373  1303               	bcf	3,6	;RP1=0, select bank0
  1883     0374  07A6               	addwf	Lcd_Write_String@i,f
  1884     0375  1803               	skipnc
  1885     0376  0AA7               	incf	Lcd_Write_String@i+1,f
  1886     0377  3000               	movlw	0
  1887     0378  07A7               	addwf	Lcd_Write_String@i+1,f
  1888     0379                     l1632:
  1889     0379  0826               	movf	Lcd_Write_String@i,w
  1890     037A  0725               	addwf	Lcd_Write_String@a,w
  1891     037B  0084               	movwf	4
  1892     037C  120A  118A  2420  120A  118A  	fcall	stringdir
  1893     0381  3A00               	xorlw	0
  1894     0382  1D03               	skipz
  1895     0383  2B85               	goto	u1331
  1896     0384  2B86               	goto	u1330
  1897     0385                     u1331:
  1898     0385  2B64               	goto	l1628
  1899     0386                     u1330:
  1900     0386                     l124:
  1901     0386  0008               	return
  1902     0387                     __end_of_Lcd_Write_String:
  1903                           
  1904                           	psect	text7
  1905     0325                     __ptext7:	
  1906 ;; *************** function _Lcd_Write_Char *****************
  1907 ;; Defined at:
  1908 ;;		line 83 in file "LCD.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  a               1    wreg     unsigned char 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  a               1    4[BANK0 ] unsigned char 
  1913 ;;  y               1    3[BANK0 ] unsigned char 
  1914 ;;  temp            1    2[BANK0 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, pclath, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1924 ;;      Params:         0       0       0       0       0
  1925 ;;      Locals:         0       3       0       0       0
  1926 ;;      Temps:          0       1       0       0       0
  1927 ;;      Totals:         0       4       0       0       0
  1928 ;;Total ram usage:        4 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 3
  1931 ;; This function calls:
  1932 ;;		_Lcd_Port
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;;		_Lcd_Write_String
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939     0325                     _Lcd_Write_Char:	
  1940                           ;psect for function _Lcd_Write_Char
  1941                           
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1945                           ;Lcd_Write_Char@a stored from wreg
  1946     0325  1283               	bcf	3,5	;RP0=0, select bank0
  1947     0326  1303               	bcf	3,6	;RP1=0, select bank0
  1948     0327  00A4               	movwf	Lcd_Write_Char@a
  1949     0328                     l1462:
  1950                           
  1951                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  1952     0328  0824               	movf	Lcd_Write_Char@a,w
  1953     0329  390F               	andlw	15
  1954     032A  00A2               	movwf	Lcd_Write_Char@temp
  1955                           
  1956                           ;LCD.c: 86:     y = a & 0xF0;
  1957     032B  0824               	movf	Lcd_Write_Char@a,w
  1958     032C  39F0               	andlw	240
  1959     032D  00A3               	movwf	Lcd_Write_Char@y
  1960     032E                     l1464:
  1961                           
  1962                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  1963     032E  1508               	bsf	8,2	;volatile
  1964     032F                     l1466:
  1965                           
  1966                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  1967     032F  0823               	movf	Lcd_Write_Char@y,w
  1968     0330  00A1               	movwf	??_Lcd_Write_Char
  1969     0331  3004               	movlw	4
  1970     0332                     u1145:
  1971     0332  1003               	clrc
  1972     0333  0CA1               	rrf	??_Lcd_Write_Char,f
  1973     0334  3EFF               	addlw	-1
  1974     0335  1D03               	skipz
  1975     0336  2B32               	goto	u1145
  1976     0337  0821               	movf	??_Lcd_Write_Char,w
  1977     0338  120A  118A  23AA  120A  118A  	fcall	_Lcd_Port
  1978     033D                     l1468:
  1979                           
  1980                           ;LCD.c: 89:     RD3 = 1;
  1981     033D  1283               	bcf	3,5	;RP0=0, select bank0
  1982     033E  1303               	bcf	3,6	;RP1=0, select bank0
  1983     033F  1588               	bsf	8,3	;volatile
  1984     0340                     l1470:
  1985                           
  1986                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1987     0340  3019               	movlw	25
  1988     0341  1283               	bcf	3,5	;RP0=0, select bank0
  1989     0342  1303               	bcf	3,6	;RP1=0, select bank0
  1990     0343  00A1               	movwf	??_Lcd_Write_Char
  1991     0344                     u1567:
  1992     0344  0BA1               	decfsz	??_Lcd_Write_Char,f
  1993     0345  2B44               	goto	u1567
  1994     0346  2B47               	nop2
  1995     0347                     l1472:
  1996                           
  1997                           ;LCD.c: 91:     RD3 = 0;
  1998     0347  1283               	bcf	3,5	;RP0=0, select bank0
  1999     0348  1303               	bcf	3,6	;RP1=0, select bank0
  2000     0349  1188               	bcf	8,3	;volatile
  2001     034A                     l1474:
  2002                           
  2003                           ;LCD.c: 92:     Lcd_Port(temp);
  2004     034A  0822               	movf	Lcd_Write_Char@temp,w
  2005     034B  120A  118A  23AA  120A  118A  	fcall	_Lcd_Port
  2006     0350                     l1476:
  2007                           
  2008                           ;LCD.c: 93:     RD3 = 1;
  2009     0350  1283               	bcf	3,5	;RP0=0, select bank0
  2010     0351  1303               	bcf	3,6	;RP1=0, select bank0
  2011     0352  1588               	bsf	8,3	;volatile
  2012     0353                     l1478:
  2013                           
  2014                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2015     0353  3019               	movlw	25
  2016     0354  1283               	bcf	3,5	;RP0=0, select bank0
  2017     0355  1303               	bcf	3,6	;RP1=0, select bank0
  2018     0356  00A1               	movwf	??_Lcd_Write_Char
  2019     0357                     u1577:
  2020     0357  0BA1               	decfsz	??_Lcd_Write_Char,f
  2021     0358  2B57               	goto	u1577
  2022     0359  2B5A               	nop2
  2023     035A                     l1480:
  2024                           
  2025                           ;LCD.c: 95:     RD3 = 0;
  2026     035A  1283               	bcf	3,5	;RP0=0, select bank0
  2027     035B  1303               	bcf	3,6	;RP1=0, select bank0
  2028     035C  1188               	bcf	8,3	;volatile
  2029     035D                     l118:
  2030     035D  0008               	return
  2031     035E                     __end_of_Lcd_Write_Char:
  2032                           
  2033                           	psect	text8
  2034     02D9                     __ptext8:	
  2035 ;; *************** function _Lcd_Set_Cursor *****************
  2036 ;; Defined at:
  2037 ;;		line 48 in file "LCD.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  a               1    wreg     unsigned char 
  2040 ;;  b               1    4[BANK0 ] unsigned char 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  a               1    6[BANK0 ] unsigned char 
  2043 ;;  temp            1    9[BANK0 ] unsigned char 
  2044 ;;  y               1    8[BANK0 ] unsigned char 
  2045 ;;  z               1    7[BANK0 ] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, pclath, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         0       1       0       0       0
  2056 ;;      Locals:         0       4       0       0       0
  2057 ;;      Temps:          0       1       0       0       0
  2058 ;;      Totals:         0       6       0       0       0
  2059 ;;Total ram usage:        6 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 4
  2062 ;; This function calls:
  2063 ;;		_Lcd_Cmd
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069     02D9                     _Lcd_Set_Cursor:	
  2070                           ;psect for function _Lcd_Set_Cursor
  2071                           
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2075                           ;Lcd_Set_Cursor@a stored from wreg
  2076     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2077     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2078     02DB  00A6               	movwf	Lcd_Set_Cursor@a
  2079     02DC                     l1606:
  2080                           
  2081                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2082     02DC  0326               	decf	Lcd_Set_Cursor@a,w
  2083     02DD  1D03               	btfss	3,2
  2084     02DE  2AE0               	goto	u1291
  2085     02DF  2AE1               	goto	u1290
  2086     02E0                     u1291:
  2087     02E0  2B00               	goto	l1616
  2088     02E1                     u1290:
  2089     02E1                     l1608:
  2090                           
  2091                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2092     02E1  0824               	movf	Lcd_Set_Cursor@b,w
  2093     02E2  3E7F               	addlw	127
  2094     02E3  00A9               	movwf	Lcd_Set_Cursor@temp
  2095                           
  2096                           ;LCD.c: 52:         z = temp >> 4;
  2097     02E4  0829               	movf	Lcd_Set_Cursor@temp,w
  2098     02E5  00A5               	movwf	??_Lcd_Set_Cursor
  2099     02E6  3004               	movlw	4
  2100     02E7                     u1305:
  2101     02E7  1003               	clrc
  2102     02E8  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2103     02E9  3EFF               	addlw	-1
  2104     02EA  1D03               	skipz
  2105     02EB  2AE7               	goto	u1305
  2106     02EC  0825               	movf	??_Lcd_Set_Cursor,w
  2107     02ED  00A7               	movwf	Lcd_Set_Cursor@z
  2108     02EE                     l1610:
  2109                           
  2110                           ;LCD.c: 53:         y = temp & 0x0F;
  2111     02EE  0829               	movf	Lcd_Set_Cursor@temp,w
  2112     02EF  390F               	andlw	15
  2113     02F0  00A8               	movwf	Lcd_Set_Cursor@y
  2114     02F1                     l1612:
  2115                           
  2116                           ;LCD.c: 54:         Lcd_Cmd(z);
  2117     02F1  0827               	movf	Lcd_Set_Cursor@z,w
  2118     02F2  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2119     02F7                     l1614:
  2120                           
  2121                           ;LCD.c: 55:         Lcd_Cmd(y);
  2122     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2123     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2124     02F9  0828               	movf	Lcd_Set_Cursor@y,w
  2125     02FA  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2126                           
  2127                           ;LCD.c: 56:     } else if (a == 2) {
  2128     02FF  2B24               	goto	l112
  2129     0300                     l1616:
  2130     0300  3002               	movlw	2
  2131     0301  0626               	xorwf	Lcd_Set_Cursor@a,w
  2132     0302  1D03               	btfss	3,2
  2133     0303  2B05               	goto	u1311
  2134     0304  2B06               	goto	u1310
  2135     0305                     u1311:
  2136     0305  2B24               	goto	l112
  2137     0306                     u1310:
  2138     0306                     l1618:
  2139                           
  2140                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2141     0306  0824               	movf	Lcd_Set_Cursor@b,w
  2142     0307  3EBF               	addlw	191
  2143     0308  00A9               	movwf	Lcd_Set_Cursor@temp
  2144                           
  2145                           ;LCD.c: 58:         z = temp >> 4;
  2146     0309  0829               	movf	Lcd_Set_Cursor@temp,w
  2147     030A  00A5               	movwf	??_Lcd_Set_Cursor
  2148     030B  3004               	movlw	4
  2149     030C                     u1325:
  2150     030C  1003               	clrc
  2151     030D  0CA5               	rrf	??_Lcd_Set_Cursor,f
  2152     030E  3EFF               	addlw	-1
  2153     030F  1D03               	skipz
  2154     0310  2B0C               	goto	u1325
  2155     0311  0825               	movf	??_Lcd_Set_Cursor,w
  2156     0312  00A7               	movwf	Lcd_Set_Cursor@z
  2157     0313                     l1620:
  2158                           
  2159                           ;LCD.c: 59:         y = temp & 0x0F;
  2160     0313  0829               	movf	Lcd_Set_Cursor@temp,w
  2161     0314  390F               	andlw	15
  2162     0315  00A8               	movwf	Lcd_Set_Cursor@y
  2163     0316                     l1622:
  2164                           
  2165                           ;LCD.c: 60:         Lcd_Cmd(z);
  2166     0316  0827               	movf	Lcd_Set_Cursor@z,w
  2167     0317  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2168     031C                     l1624:
  2169                           
  2170                           ;LCD.c: 61:         Lcd_Cmd(y);
  2171     031C  1283               	bcf	3,5	;RP0=0, select bank0
  2172     031D  1303               	bcf	3,6	;RP1=0, select bank0
  2173     031E  0828               	movf	Lcd_Set_Cursor@y,w
  2174     031F  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2175     0324                     l112:
  2176     0324  0008               	return
  2177     0325                     __end_of_Lcd_Set_Cursor:
  2178                           
  2179                           	psect	text9
  2180     021C                     __ptext9:	
  2181 ;; *************** function _Lcd_Init *****************
  2182 ;; Defined at:
  2183 ;;		line 65 in file "LCD.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0
  2199 ;;      Temps:          0       2       0       0       0
  2200 ;;      Totals:         0       2       0       0       0
  2201 ;;Total ram usage:        2 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 4
  2204 ;; This function calls:
  2205 ;;		_Lcd_Cmd
  2206 ;;		_Lcd_Port
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212     021C                     _Lcd_Init:	
  2213                           ;psect for function _Lcd_Init
  2214                           
  2215     021C                     l1594:	
  2216                           ;incstack = 0
  2217                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2218                           
  2219                           
  2220                           ;LCD.c: 66:     Lcd_Port(0x00);
  2221     021C  3000               	movlw	0
  2222     021D  120A  118A  23AA  120A  118A  	fcall	_Lcd_Port
  2223     0222                     l1596:
  2224                           
  2225                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2226     0222  3034               	movlw	52
  2227     0223  1283               	bcf	3,5	;RP0=0, select bank0
  2228     0224  1303               	bcf	3,6	;RP1=0, select bank0
  2229     0225  00A5               	movwf	??_Lcd_Init+1
  2230     0226  30F1               	movlw	241
  2231     0227  00A4               	movwf	??_Lcd_Init
  2232     0228                     u1587:
  2233     0228  0BA4               	decfsz	??_Lcd_Init,f
  2234     0229  2A28               	goto	u1587
  2235     022A  0BA5               	decfsz	??_Lcd_Init+1,f
  2236     022B  2A28               	goto	u1587
  2237     022C                     l1598:
  2238                           
  2239                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2240     022C  3003               	movlw	3
  2241     022D  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2242                           
  2243                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2244     0232  300D               	movlw	13
  2245     0233  1283               	bcf	3,5	;RP0=0, select bank0
  2246     0234  1303               	bcf	3,6	;RP1=0, select bank0
  2247     0235  00A5               	movwf	??_Lcd_Init+1
  2248     0236  30FB               	movlw	251
  2249     0237  00A4               	movwf	??_Lcd_Init
  2250     0238                     u1597:
  2251     0238  0BA4               	decfsz	??_Lcd_Init,f
  2252     0239  2A38               	goto	u1597
  2253     023A  0BA5               	decfsz	??_Lcd_Init+1,f
  2254     023B  2A38               	goto	u1597
  2255     023C                     l1600:
  2256                           
  2257                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2258     023C  3003               	movlw	3
  2259     023D  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2260     0242                     l1602:
  2261                           
  2262                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2263     0242  301D               	movlw	29
  2264     0243  1283               	bcf	3,5	;RP0=0, select bank0
  2265     0244  1303               	bcf	3,6	;RP1=0, select bank0
  2266     0245  00A5               	movwf	??_Lcd_Init+1
  2267     0246  3090               	movlw	144
  2268     0247  00A4               	movwf	??_Lcd_Init
  2269     0248                     u1607:
  2270     0248  0BA4               	decfsz	??_Lcd_Init,f
  2271     0249  2A48               	goto	u1607
  2272     024A  0BA5               	decfsz	??_Lcd_Init+1,f
  2273     024B  2A48               	goto	u1607
  2274     024C  0000               	nop
  2275                           
  2276                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2277     024D  3003               	movlw	3
  2278     024E  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2279                           
  2280                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2281     0253  3002               	movlw	2
  2282     0254  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2283                           
  2284                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2285     0259  3002               	movlw	2
  2286     025A  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2287                           
  2288                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2289     025F  3008               	movlw	8
  2290     0260  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2291                           
  2292                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2293     0265  3000               	movlw	0
  2294     0266  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2295                           
  2296                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2297     026B  300C               	movlw	12
  2298     026C  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2299                           
  2300                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2301     0271  3000               	movlw	0
  2302     0272  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2303                           
  2304                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2305     0277  3006               	movlw	6
  2306     0278  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2307     027D                     l115:
  2308     027D  0008               	return
  2309     027E                     __end_of_Lcd_Init:
  2310                           
  2311                           	psect	text10
  2312     0413                     __ptext10:	
  2313 ;; *************** function _Lcd_Clear *****************
  2314 ;; Defined at:
  2315 ;;		line 43 in file "LCD.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;		None
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0, pclath, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         0       0       0       0       0
  2330 ;;      Locals:         0       0       0       0       0
  2331 ;;      Temps:          0       0       0       0       0
  2332 ;;      Totals:         0       0       0       0       0
  2333 ;;Total ram usage:        0 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; Hardware stack levels required when called: 4
  2336 ;; This function calls:
  2337 ;;		_Lcd_Cmd
  2338 ;; This function is called by:
  2339 ;;		_main
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343     0413                     _Lcd_Clear:	
  2344                           ;psect for function _Lcd_Clear
  2345                           
  2346     0413                     l1604:	
  2347                           ;incstack = 0
  2348                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2349                           
  2350                           
  2351                           ;LCD.c: 44:     Lcd_Cmd(0);
  2352     0413  3000               	movlw	0
  2353     0414  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2354                           
  2355                           ;LCD.c: 45:     Lcd_Cmd(1);
  2356     0419  3001               	movlw	1
  2357     041A  120A  118A  23CA  120A  118A  	fcall	_Lcd_Cmd
  2358     041F                     l106:
  2359     041F  0008               	return
  2360     0420                     __end_of_Lcd_Clear:
  2361                           
  2362                           	psect	text11
  2363     03CA                     __ptext11:	
  2364 ;; *************** function _Lcd_Cmd *****************
  2365 ;; Defined at:
  2366 ;;		line 35 in file "LCD.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  a               1    wreg     unsigned char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  a               1    3[BANK0 ] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       0       0       0       0
  2381 ;;      Locals:         0       1       0       0       0
  2382 ;;      Temps:          0       2       0       0       0
  2383 ;;      Totals:         0       3       0       0       0
  2384 ;;Total ram usage:        3 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 3
  2387 ;; This function calls:
  2388 ;;		_Lcd_Port
  2389 ;; This function is called by:
  2390 ;;		_Lcd_Clear
  2391 ;;		_Lcd_Set_Cursor
  2392 ;;		_Lcd_Init
  2393 ;;		_Lcd_Shift_Right
  2394 ;;		_Lcd_Shift_Left
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398     03CA                     _Lcd_Cmd:	
  2399                           ;psect for function _Lcd_Cmd
  2400                           
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2404                           ;Lcd_Cmd@a stored from wreg
  2405     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2406     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2407     03CC  00A3               	movwf	Lcd_Cmd@a
  2408     03CD                     l1482:
  2409                           
  2410                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2411     03CD  1108               	bcf	8,2	;volatile
  2412     03CE                     l1484:
  2413                           
  2414                           ;LCD.c: 37:     Lcd_Port(a);
  2415     03CE  0823               	movf	Lcd_Cmd@a,w
  2416     03CF  120A  118A  23AA  120A  118A  	fcall	_Lcd_Port
  2417     03D4                     l1486:
  2418                           
  2419                           ;LCD.c: 38:     RD3 = 1;
  2420     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2421     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2422     03D6  1588               	bsf	8,3	;volatile
  2423     03D7                     l1488:
  2424                           
  2425                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2426     03D7  300B               	movlw	11
  2427     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2428     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2429     03DA  00A2               	movwf	??_Lcd_Cmd+1
  2430     03DB  3061               	movlw	97
  2431     03DC  00A1               	movwf	??_Lcd_Cmd
  2432     03DD                     u1617:
  2433     03DD  0BA1               	decfsz	??_Lcd_Cmd,f
  2434     03DE  2BDD               	goto	u1617
  2435     03DF  0BA2               	decfsz	??_Lcd_Cmd+1,f
  2436     03E0  2BDD               	goto	u1617
  2437     03E1  2BE2               	nop2
  2438     03E2                     l1490:
  2439                           
  2440                           ;LCD.c: 40:     RD3 = 0;
  2441     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2442     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2443     03E4  1188               	bcf	8,3	;volatile
  2444     03E5                     l103:
  2445     03E5  0008               	return
  2446     03E6                     __end_of_Lcd_Cmd:
  2447                           
  2448                           	psect	text12
  2449     03AA                     __ptext12:	
  2450 ;; *************** function _Lcd_Port *****************
  2451 ;; Defined at:
  2452 ;;		line 13 in file "LCD.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  a               1    wreg     unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  a               1    0[BANK0 ] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         0       0       0       0       0
  2467 ;;      Locals:         0       1       0       0       0
  2468 ;;      Temps:          0       0       0       0       0
  2469 ;;      Totals:         0       1       0       0       0
  2470 ;;Total ram usage:        1 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 2
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_Lcd_Cmd
  2477 ;;		_Lcd_Init
  2478 ;;		_Lcd_Write_Char
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482     03AA                     _Lcd_Port:	
  2483                           ;psect for function _Lcd_Port
  2484                           
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _Lcd_Port: [wreg]
  2488                           ;Lcd_Port@a stored from wreg
  2489     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2490     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2491     03AC  00A0               	movwf	Lcd_Port@a
  2492     03AD                     l1452:
  2493                           
  2494                           ;LCD.c: 14:     if (a & 1)
  2495     03AD  1C20               	btfss	Lcd_Port@a,0
  2496     03AE  2BB0               	goto	u1101
  2497     03AF  2BB1               	goto	u1100
  2498     03B0                     u1101:
  2499     03B0  2BB3               	goto	l92
  2500     03B1                     u1100:
  2501     03B1                     l1454:
  2502                           
  2503                           ;LCD.c: 15:         RD4 = 1;
  2504     03B1  1608               	bsf	8,4	;volatile
  2505     03B2  2BB4               	goto	l93
  2506     03B3                     l92:	
  2507                           ;LCD.c: 16:     else
  2508                           
  2509                           
  2510                           ;LCD.c: 17:         RD4 = 0;
  2511     03B3  1208               	bcf	8,4	;volatile
  2512     03B4                     l93:
  2513                           
  2514                           ;LCD.c: 19:     if (a & 2)
  2515     03B4  1CA0               	btfss	Lcd_Port@a,1
  2516     03B5  2BB7               	goto	u1111
  2517     03B6  2BB8               	goto	u1110
  2518     03B7                     u1111:
  2519     03B7  2BBA               	goto	l94
  2520     03B8                     u1110:
  2521     03B8                     l1456:
  2522                           
  2523                           ;LCD.c: 20:         RD5 = 1;
  2524     03B8  1688               	bsf	8,5	;volatile
  2525     03B9  2BBB               	goto	l95
  2526     03BA                     l94:	
  2527                           ;LCD.c: 21:     else
  2528                           
  2529                           
  2530                           ;LCD.c: 22:         RD5 = 0;
  2531     03BA  1288               	bcf	8,5	;volatile
  2532     03BB                     l95:
  2533                           
  2534                           ;LCD.c: 24:     if (a & 4)
  2535     03BB  1D20               	btfss	Lcd_Port@a,2
  2536     03BC  2BBE               	goto	u1121
  2537     03BD  2BBF               	goto	u1120
  2538     03BE                     u1121:
  2539     03BE  2BC1               	goto	l96
  2540     03BF                     u1120:
  2541     03BF                     l1458:
  2542                           
  2543                           ;LCD.c: 25:         RD6 = 1;
  2544     03BF  1708               	bsf	8,6	;volatile
  2545     03C0  2BC2               	goto	l97
  2546     03C1                     l96:	
  2547                           ;LCD.c: 26:     else
  2548                           
  2549                           
  2550                           ;LCD.c: 27:         RD6 = 0;
  2551     03C1  1308               	bcf	8,6	;volatile
  2552     03C2                     l97:
  2553                           
  2554                           ;LCD.c: 29:     if (a & 8)
  2555     03C2  1DA0               	btfss	Lcd_Port@a,3
  2556     03C3  2BC5               	goto	u1131
  2557     03C4  2BC6               	goto	u1130
  2558     03C5                     u1131:
  2559     03C5  2BC8               	goto	l98
  2560     03C6                     u1130:
  2561     03C6                     l1460:
  2562                           
  2563                           ;LCD.c: 30:         RD7 = 1;
  2564     03C6  1788               	bsf	8,7	;volatile
  2565     03C7  2BC9               	goto	l100
  2566     03C8                     l98:	
  2567                           ;LCD.c: 31:     else
  2568                           
  2569                           
  2570                           ;LCD.c: 32:         RD7 = 0;
  2571     03C8  1388               	bcf	8,7	;volatile
  2572     03C9                     l100:
  2573     03C9  0008               	return
  2574     03CA                     __end_of_Lcd_Port:
  2575                           
  2576                           	psect	text13
  2577     03E6                     __ptext13:	
  2578 ;; *************** function _isr *****************
  2579 ;; Defined at:
  2580 ;;		line 74 in file "main.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0
  2596 ;;      Temps:          2       0       0       0       0
  2597 ;;      Totals:         2       0       0       0       0
  2598 ;;Total ram usage:        2 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 1
  2601 ;; This function calls:
  2602 ;;		_adc_read
  2603 ;; This function is called by:
  2604 ;;		Interrupt level 1
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608     03E6                     _isr:	
  2609                           ;psect for function _isr
  2610                           
  2611     03E6                     i1l1442:
  2612                           
  2613                           ;main.c: 75:     if (PIR1bits.ADIF == 1){
  2614     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2615     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2616     03E8  1F0C               	btfss	12,6	;volatile
  2617     03E9  2BEB               	goto	u109_21
  2618     03EA  2BEC               	goto	u109_20
  2619     03EB                     u109_21:
  2620     03EB  2BF8               	goto	i1l65
  2621     03EC                     u109_20:
  2622     03EC                     i1l1444:
  2623                           
  2624                           ;main.c: 76:         adc_var = adc_read();
  2625     03EC  120A  118A  242A  120A  118A  	fcall	_adc_read
  2626     03F1  0871               	movf	?_adc_read+1,w
  2627     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2628     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2629     03F4  00B3               	movwf	_adc_var+1
  2630     03F5  0870               	movf	?_adc_read,w
  2631     03F6  00B2               	movwf	_adc_var
  2632     03F7                     i1l1446:
  2633                           
  2634                           ;main.c: 77:         PIR1bits.ADIF = 0;
  2635     03F7  130C               	bcf	12,6	;volatile
  2636     03F8                     i1l65:
  2637     03F8  0875               	movf	??_isr+1,w
  2638     03F9  008A               	movwf	10
  2639     03FA  0E74               	swapf	??_isr,w
  2640     03FB  0083               	movwf	3
  2641     03FC  0EFE               	swapf	btemp,f
  2642     03FD  0E7E               	swapf	btemp,w
  2643     03FE  0009               	retfie
  2644     03FF                     __end_of_isr:
  2645                           
  2646                           	psect	intentry
  2647     0004                     __pintentry:	
  2648                           ;incstack = 0
  2649                           ; Regs used in _isr: [wreg+pclath+cstack]
  2650                           
  2651     0004                     interrupt_function:
  2652     007E                     saved_w	set	btemp
  2653     0004  00FE               	movwf	btemp
  2654     0005  0E03               	swapf	3,w
  2655     0006  00F4               	movwf	??_isr
  2656     0007  080A               	movf	10,w
  2657     0008  00F5               	movwf	??_isr+1
  2658     0009  120A  118A  2BE6   	ljmp	_isr
  2659                           
  2660                           	psect	text14
  2661     042A                     __ptext14:	
  2662 ;; *************** function _adc_read *****************
  2663 ;; Defined at:
  2664 ;;		line 34 in file "ADC_setup.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  2    0[COMMON] int 
  2671 ;; Registers used:
  2672 ;;		wreg
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2678 ;;      Params:         2       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0
  2680 ;;      Temps:          2       0       0       0       0
  2681 ;;      Totals:         4       0       0       0       0
  2682 ;;Total ram usage:        4 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_isr
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691     042A                     _adc_read:	
  2692                           ;psect for function _adc_read
  2693                           
  2694     042A                     i1l1338:	
  2695                           ;incstack = 0
  2696                           ; Regs used in _adc_read: [wreg]
  2697                           
  2698                           
  2699                           ;ADC_setup.c: 35:     return ADRESH;
  2700     042A  1283               	bcf	3,5	;RP0=0, select bank0
  2701     042B  1303               	bcf	3,6	;RP1=0, select bank0
  2702     042C  081E               	movf	30,w	;volatile
  2703     042D  00F2               	movwf	??_adc_read
  2704     042E  01F3               	clrf	??_adc_read+1
  2705     042F  0872               	movf	??_adc_read,w
  2706     0430  00F0               	movwf	?_adc_read
  2707     0431  0873               	movf	??_adc_read+1,w
  2708     0432  00F1               	movwf	?_adc_read+1
  2709     0433                     i1l154:
  2710     0433  0008               	return
  2711     0434                     __end_of_adc_read:
  2712     007E                     btemp	set	126	;btemp
  2713     007E                     wtemp0	set	126
  2714                           
  2715                           	psect	idloc
  2716                           
  2717                           ;Config register IDLOC0 @ 0x2000
  2718                           ;	unspecified, using default values
  2719     2000                     	org	8192
  2720     2000  3FFF               	dw	16383
  2721                           
  2722                           ;Config register IDLOC1 @ 0x2001
  2723                           ;	unspecified, using default values
  2724     2001                     	org	8193
  2725     2001  3FFF               	dw	16383
  2726                           
  2727                           ;Config register IDLOC2 @ 0x2002
  2728                           ;	unspecified, using default values
  2729     2002                     	org	8194
  2730     2002  3FFF               	dw	16383
  2731                           
  2732                           ;Config register IDLOC3 @ 0x2003
  2733                           ;	unspecified, using default values
  2734     2003                     	org	8195
  2735     2003  3FFF               	dw	16383
  2736                           
  2737                           	psect	config
  2738                           
  2739                           ;Config register CONFIG1 @ 0x2007
  2740                           ;	Oscillator Selection bits
  2741                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2742                           ;	Watchdog Timer Enable bit
  2743                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2744                           ;	Power-up Timer Enable bit
  2745                           ;	PWRTE = OFF, PWRT disabled
  2746                           ;	RE3/MCLR pin function select bit
  2747                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2748                           ;	Code Protection bit
  2749                           ;	CP = OFF, Program memory code protection is disabled
  2750                           ;	Data Code Protection bit
  2751                           ;	CPD = OFF, Data memory code protection is disabled
  2752                           ;	Brown Out Reset Selection bits
  2753                           ;	BOREN = OFF, BOR disabled
  2754                           ;	Internal External Switchover bit
  2755                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2756                           ;	Fail-Safe Clock Monitor Enabled bit
  2757                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2758                           ;	Low Voltage Programming Enable bit
  2759                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2760                           ;	In-Circuit Debugger Mode bit
  2761                           ;	DEBUG = 0x1, unprogramme  2762     2007                     	org	8199
  2763     2007  20D4               	dw	8404
  2764                           
  2765                           ;Config register CONFIG2 @ 0x2008
  2766                           ;	Brown-out Reset Selection bit
  2767                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2768                           ;	Flash Program Memory Self Write Enable bits
  2769                           ;	WRT = OFF, Write protection off
  2770     2008                     	org	8200
  2771     2008  3FFF               	dw	16383

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     18      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_adc_read

Critical Paths under _main in BANK0

    _main->___awmod
    _adc_init->_adc_change_channel
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4076
                                             16 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                           _adc_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             3     1      2     645
                                              2 BANK0      3     1      2
                 _adc_change_channel
 ---------------------------------------------------------------------------------
 (2) _adc_change_channel                                   2     0      2     524
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     420
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     725
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              4 COMMON     2     2      0
                           _adc_read
 ---------------------------------------------------------------------------------
 (5) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _adc_init
     _adc_change_channel
   _setup

 _isr (ROOT)
   _adc_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jul 25 09:49:02 2023

                         pc 0002                          l92 03B3                          l68 0412  
                        l93 03B4                          l94 03BA                          l95 03BB  
                        l96 03C1                          l97 03C2                          l98 03C8  
              ___awdiv@sign 0026                          fsr 0004                         l100 03C9  
                       l103 03E5                         l112 0324                         l106 041F  
                       l115 027D                         l124 0386                         l118 035D  
                       l151 03A9                         l171 0113                         l440 02D8  
                       l427 021B                         _RD3 0043                         _RD4 0044  
                       _RD5 0045                         _RD6 0046                         _RD7 0047  
                       _isr 03E6                         fsr0 0004                ___awmod@sign 002F  
                      l1500 0032                        l1510 004D                        l1502 0036  
                      l1600 023C                        l1520 006C                        l1512 0056  
                      l1504 003B                        l1602 0242                        l1610 02EE  
                      l1530 008C                        l1522 0071                        l1514 005A  
                      l1506 0044                        l1460 03C6                        l1452 03AD  
                      l1604 0413                        l1620 0313                        l1612 02F1  
                      l1700 02AD                        l1540 00A7                        l1532 0090  
                      l1524 007A                        l1516 005F                        l1508 0048  
                      l1454 03B1                        l1622 0316                        l1614 02F7  
                      l1606 02DC                        l1470 0340                        l1462 0328  
                      l1630 0371                        l1710 02CF                        l1702 02B7  
                      l1550 00C6                        l1542 00B0                        l1534 0095  
                      l1526 007E                        l1518 0068                        l1456 03B8  
                      l1624 031C                        l1608 02E1                        l1616 0300  
                      l1480 035A                        l1472 0347                        l1464 032E  
                      l1632 0379                        l1640 01BF                        l1712 02D4  
                      l1704 02BD                        l1560 00E6                        l1552 00CB  
                      l1544 00B4                        l1536 009E                        l1528 0083  
                      l1720 013D                        l1458 03BF                        l1490 03E2  
                      l1482 03CD                        l1618 0306                        l1474 034A  
                      l1466 032F                        l1626 0361                        l1650 01D0  
                      l1642 01C1                        l1634 01B3                        l1706 02C4  
                      l1570 0101                        l1562 00EA                        l1554 00D4  
                      l1546 00B9                        l1538 00A2                        l1730 01A4  
                      l1722 0147                        l1484 03CE                        l1476 0350  
                      l1468 033D                        l1628 0364                        l1660 01E8  
                      l1652 01D6                        l1644 01C5                        l1636 01B6  
                      l1708 02CA                        l1572 010A                        l1564 00EF  
                      l1556 00D8                        l1548 00C2                        l1492 001B  
                      l1580 040C                        l1732 01A5                        l1724 015F  
                      l1716 0114                        l1486 03D4                        l1478 0353  
                      l1662 01F9                        l1654 01D9                        l1670 020D  
                      l1646 01CA                        l1638 01BA                        l1574 010E  
                      l1566 00F8                        l1558 00DD                        l1494 0023  
                      l1590 039F                        l1582 040D                        l1726 0186  
                      l1718 0137                        l1488 03D7                        l1672 0212  
                      l1664 01FF                        l1656 01E0                        l1648 01CE  
                      l1680 0281                        l1568 00FC                        l1496 0025  
                      l1592 03A2                        l1584 0411                        l1576 03FF  
                      l1728 019E                        l1594 021C                        l1674 0217  
                      l1666 0200                        l1658 01E4                        l1690 0295  
                      l1682 0285                        l1498 002A                        l1586 0387  
                      l1578 040B                        l1596 0222                        l1668 0207  
                      l1692 029B                        l1684 028A                        l1588 0394  
                      l1598 022C                        l1694 029E                        l1686 028C  
                      l1678 027E                        l1696 02A5                        l1688 0290  
                      l1698 02A9                        ?_isr 0070                        STR_1 0426  
                      u1100 03B1                        u1101 03B0                        u1110 03B8  
                      u1111 03B7                        u1120 03BF                        u1200 007A  
                      u1121 03BE                        u1201 0079                        u1130 03C6  
                      u1210 008C                        u1131 03C5                        u1211 008B  
                      u1220 009E                        u1221 009D                        u1310 0306  
                      u1230 00B0                        u1150 0023                        u1311 0305  
                      u1231 00AF                        u1151 0022                        u1400 01F9  
                      u1240 00C2                        u1160 0032                        u1305 02E7  
                      u1145 0332                        u1401 01F8                        u1241 00C1  
                      u1161 0031                        u1330 0386                        u1250 00D4  
                      u1170 0044                        u1331 0385                        u1251 00D3  
                      u1171 0043                        u1420 020D                        u1340 01BA  
                      u1260 00E6                        u1180 0056                        u1325 030C  
                      u1421 020C                        u1405 01F5                        u1341 01B9  
                      u1261 00E5                        u1181 0055                        u1430 0212  
                      u1350 01C5                        u1510 02CA                        u1270 00F8  
                      u1190 0068                        u1431 0211                        u1415 0201  
                      u1351 01C4                        u1511 02C9                        u1271 00F7  
                      u1191 0067                        u1360 01D6                        u1520 02CF  
                      u1440 0285                        u1280 010A                        u1361 01D5  
                      u1521 02CE                        u1505 02BE                        u1441 0284  
                      u1281 0109                        u1290 02E1                        u1450 0290  
                      u1530 01A4                        u1291 02E0                        u1451 028F  
                      u1531 01A3                        u1380 01E8                        u1460 029B  
                      u1381 01E7                        u1461 029A                        u1607 0248  
                      u1375 01DA                        u1480 02AD                        u1617 03DD  
                      u1481 02AC                        u1490 02B7                        u1395 01E9  
                      u1491 02B6                        u1475 029F                        u1547 01AB  
                      u1557 03A6                        u1567 0344                        u1495 02B3  
                      u1577 0357                        u1587 0228                        u1597 0238  
                      i1l65 03F8           ?_Lcd_Write_String 0070                        _main 0114  
                      btemp 007E                        start 000C          ??_Lcd_Write_String 0025  
           __end_of_Lcd_Cmd 03E6                       ??_isr 0074                       ?_main 0070  
           __end_of___awdiv 021C             __end_of___awmod 02D9                       _ANSEL 0188  
           ___awdiv@divisor 0020                       i1l154 0433             ___awdiv@counter 0025  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _setup 03FF  
                     pclath 000A                       status 0003                       wtemp0 007E  
          __end_of_Lcd_Init 027E            __end_of_Lcd_Port 03CA             __initialization 000F  
              __end_of_main 01B3                      ??_main 0030                      _ADRESH 001E  
          ___awdiv@dividend 0022                      ?_setup 0070                      _ANSELH 0189  
          __end_of_adc_init 03AA            __end_of_adc_read 0434                      i1l1338 042A  
                    i1l1442 03E6                      i1l1444 03EC                      i1l1446 03F7  
                    u109_20 03EC                      u109_21 03EB                   ??_Lcd_Cmd 0021  
 adc_change_channel@channel 0020                   ??___awdiv 0024                   ??___awmod 002D  
          ___awdiv@quotient 0027             ___awmod@divisor 0029                      _select 0076  
           ___awmod@counter 002E                      saved_w 007E             Lcd_Set_Cursor@a 0026  
           Lcd_Set_Cursor@b 0024             Lcd_Set_Cursor@y 0028             Lcd_Set_Cursor@z 0027  
   __end_of__initialization 0017           __end_of_Lcd_Clear 0420              __pcstackCOMMON 0070  
             __end_of_setup 0413              _Lcd_Set_Cursor 02D9                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                     ??_setup 0020                  __pbssBANK0 0032  
                __pmaintext 0114                  __pintentry 0004      __end_of_Lcd_Set_Cursor 0325  
                 ?_adc_init 0022                   ?_adc_read 0070                  ??_Lcd_Init 0024  
                ??_Lcd_Port 0020                  __stringtab 0420              _Lcd_Write_Char 0325  
                   _Lcd_Cmd 03CA                     ___awdiv 01B3                     ___awmod 027E  
                   _adc_var 0032                     _bandera 0078             ?_Lcd_Set_Cursor 0024  
                ??_adc_init 0024                  ??_adc_read 0072                     __ptext1 03FF  
                   __ptext2 0387                     __ptext3 001B                     __ptext4 027E  
                   __ptext5 01B3                     __ptext6 035E                     __ptext7 0325  
                   __ptext8 02D9                     __ptext9 021C            ___awmod@dividend 002B  
    __end_of_Lcd_Write_Char 035E        end_of_initialization 0017                   Lcd_Port@a 0020  
                 _PORTBbits 0006                   _PORTDbits 0008             ?_Lcd_Write_Char 0070  
         Lcd_Write_String@a 0025           Lcd_Write_String@i 0026                   _Lcd_Clear 0413  
          _Lcd_Write_String 035E  __end_of_adc_change_channel 0114         start_initialization 000F  
               __end_of_isr 03FF                  ?_Lcd_Clear 0070             adc_init@channel 0022  
           Lcd_Write_Char@a 0024             Lcd_Write_Char@y 0023                 __pbssCOMMON 0076  
                 ___latbits 0002               __pcstackBANK0 0020                    ?_Lcd_Cmd 0070  
          ??_Lcd_Set_Cursor 0025                    ?___awdiv 0020                    ?___awmod 0029  
                 __pstrings 0420           interrupt_function 0004                    _PIE1bits 008C  
                  Lcd_Cmd@a 0023                    _PIR1bits 000C                 ??_Lcd_Clear 0024  
                _ADCON0bits 001F                 __stringbase 0425                  _ADCON1bits 009F  
          ??_Lcd_Write_Char 0021                    _Lcd_Init 021C                    _Lcd_Port 03AA  
  __end_of_Lcd_Write_String 0387          __end_of__stringtab 0426                    _adc_init 0387  
                  _adc_read 042A                    __ptext10 0413                    __ptext11 03CA  
                  __ptext12 03AA                    __ptext13 03E6                    __ptext14 042A  
        _adc_change_channel 001B         ?_adc_change_channel 0020                  _INTCONbits 000B  
      ??_adc_change_channel 0022          Lcd_Write_Char@temp 0022                    intlevel1 0000  
                 stringcode 0420                  _OSCCONbits 008F          Lcd_Set_Cursor@temp 0029  
                  stringdir 0420                    stringtab 0420  
